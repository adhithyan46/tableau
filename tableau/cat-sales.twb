<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='data' inline='true' name='federated.1q9ip551dg882h1cjei6n0do14ww' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0j51rse14htetu1h0wdll1goia0v'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (2)' inline='true' name='federated.1r9k1d40zgnkdu18z8tiu1isixkk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.09vcg6103lbfo7198wfx91gimbj5'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (3)' inline='true' name='federated.0gwwu8e03ozise1ghdi8s0w0s3zz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.01meg9102d6s0h16pvm610cnow1l'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (4)' inline='true' name='federated.0gvr9vo1u048ah1eqceaa031pybw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.19vgsb61iko0nl12yod2n1xn2hpg'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm_Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='string' name='Basin' ordinal='3' />
            <column datatype='string' name='Basin_1' ordinal='4' />
            <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm_Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='string' name='Basin' ordinal='3' />
            <column datatype='string' name='Basin_1' ordinal='4' />
            <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storm_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Storm_Name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Storm_Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Basin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin_1]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Basin_1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Speed (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_Speed (kt)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Wind_Speed (kt)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Basin 1' datatype='string' name='[Basin_1]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Storm Name' datatype='string' name='[Storm_Name]' role='dimension' type='nominal' />
      <column caption='Wind Speed (kt)' datatype='real' name='[Wind_Speed (kt)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_463AA86207664DCCB343FE29F511FFE9]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_463AA86207664DCCB343FE29F511FFE9'>
            <properties context=''>
              <relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Storm_Name' ordinal='0' />
                  <column datatype='string' name='Date' ordinal='1' />
                  <column datatype='real' name='Longitude' ordinal='2' />
                  <column datatype='string' name='Basin' ordinal='3' />
                  <column datatype='string' name='Basin_1' ordinal='4' />
                  <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Worksheet (jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau)' inline='true' name='federated.1wf4wfg1ajmb8t1cd07mh1rsvyl5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau' name='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Python/Downloads/jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F6:no:A1:F6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>false</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Worksheet' datatype='table' name='[__tableau_internal_object_id__].[Worksheet_3129C4C19FC942899B331CD544023247]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Worksheet' id='Worksheet_3129C4C19FC942899B331CD544023247'>
            <properties context=''>
              <relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
                <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='string' name='F2' ordinal='1' />
                  <column datatype='real' name='F3' ordinal='2' />
                  <column datatype='real' name='F4' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='integer' name='F6' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data1' inline='true' name='federated.1t72dvf1ymudhb19ed18a0k2b1w8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data1' name='textscan.19pvvmn1y8n15z196det20x8yoxl'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Latitude ' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='string' name='Basin' ordinal='4' />
            <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Latitude ' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='string' name='Basin' ordinal='4' />
            <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storm Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Storm Name]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Storm Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude ]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Latitude </remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Basin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Speed (kt)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wind Speed (kt)]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Wind Speed (kt)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[Latitude ]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data1.csv' datatype='table' name='[__tableau_internal_object_id__].[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data1.csv' id='data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3'>
            <properties context=''>
              <relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Storm Name' ordinal='0' />
                  <column datatype='string' name='Date' ordinal='1' />
                  <column datatype='real' name='Latitude ' ordinal='2' />
                  <column datatype='real' name='Longitude' ordinal='3' />
                  <column datatype='string' name='Basin' ordinal='4' />
                  <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='storms' inline='true' name='federated.0w7sszv1oa6emo12375df0gc0kdi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='storms' name='textscan.0zriyv01x1emtg1b1xesx0mzkifx'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='storms.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='month' ordinal='2' />
            <column datatype='integer' name='day' ordinal='3' />
            <column datatype='integer' name='hour' ordinal='4' />
            <column datatype='real' name='lat' ordinal='5' />
            <column datatype='real' name='long' ordinal='6' />
            <column datatype='string' name='status' ordinal='7' />
            <column datatype='integer' name='category' ordinal='8' />
            <column datatype='integer' name='wind' ordinal='9' />
            <column datatype='integer' name='pressure' ordinal='10' />
            <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
            <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='month' ordinal='2' />
            <column datatype='integer' name='day' ordinal='3' />
            <column datatype='integer' name='hour' ordinal='4' />
            <column datatype='real' name='lat' ordinal='5' />
            <column datatype='real' name='long' ordinal='6' />
            <column datatype='string' name='status' ordinal='7' />
            <column datatype='integer' name='category' ordinal='8' />
            <column datatype='integer' name='wind' ordinal='9' />
            <column datatype='integer' name='pressure' ordinal='10' />
            <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
            <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wind]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>wind</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tropicalstorm_force_diameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tropicalstorm_force_diameter]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>tropicalstorm_force_diameter</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hurricane_force_diameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hurricane_force_diameter]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>hurricane_force_diameter</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='storms.csv' datatype='table' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
      <column caption='Category' datatype='integer' name='[category]' role='measure' type='quantitative' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Hurricane Force Diameter' datatype='string' name='[hurricane_force_diameter]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='integer' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Tropicalstorm Force Diameter' datatype='string' name='[tropicalstorm_force_diameter]' role='dimension' type='nominal' />
      <column caption='Wind' datatype='integer' name='[wind]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AL022006&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AL101993&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arthur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Danny&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gustav&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ivan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nestor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL011993&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL072003&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alicia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emily&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gamma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imelda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melissa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oscar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sebastien&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AL021999&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AL092000&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ernesto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isaac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mitch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tammy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AL042000&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AL121991&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hermine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joaquin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lili&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nineteen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Two&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL031987&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL101994&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Felix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hanna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeanne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rafael&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Three&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AL022000&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AL092001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gloria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isabel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kirk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nadine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AL071999&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alberto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eleven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frederic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Igor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Juliet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marilyn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Opal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sandy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wilma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL012000&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL081992&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Epsilon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ingrid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Otto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AL061997&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AL142003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonnie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edouard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Omar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sally&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AL022001&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AL092003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cristobal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Evelyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gonzalo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isaias&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Klaus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paulette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Teddy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL051994&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL121999&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Five&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hortense&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lisa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rita&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vicky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AL061988&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AL141995&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dorian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hugo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joyce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lorenzo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Odette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Victor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AL062003&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al202011&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eight&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fred&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Julian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;One&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilfred&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AL072002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alex&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chantal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabrielle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ike&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matthew&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ophelia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zeta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AL031992&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AL102004&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fernand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jerry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AL022003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AL101991&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fabian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isidore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AL021992&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AL081994&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erika&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georges&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michelle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pablo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sixteen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AL061995&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AL142002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bob&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Four&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Humberto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Juan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roxanne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vince&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AL041991&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AL111999&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beryl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Debby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fifteen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL021994&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL091994&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Claudette&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katrina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mindy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paloma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='storms.csv' id='storms.csv_7967090155FA414AA590942EF916D02D'>
            <properties context=''>
              <relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='integer' name='month' ordinal='2' />
                  <column datatype='integer' name='day' ordinal='3' />
                  <column datatype='integer' name='hour' ordinal='4' />
                  <column datatype='real' name='lat' ordinal='5' />
                  <column datatype='real' name='long' ordinal='6' />
                  <column datatype='string' name='status' ordinal='7' />
                  <column datatype='integer' name='category' ordinal='8' />
                  <column datatype='integer' name='wind' ordinal='9' />
                  <column datatype='integer' name='pressure' ordinal='10' />
                  <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
                  <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Sample - Superstore' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0ozsbj20cdelf51evvdk71kugqg0'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Python/Documents/My Tableau Repository/Datasources/2024.2/en_US-US/Sample - Superstore.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='data' name='textscan.0xciy9s16mj00a1bbgic71i9d2ja'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:\Users\Python\Downloads\data.csv' dataRefreshTime='' directory='C:/Users/Python/Downloads' filename='C:/Users/Python/AppData/Local/Temp/TableauTemp/1cnqi4b19ytls41a13nnr0impu2t/data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>81352</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Ratio' datatype='real' name='[Calculation_1368249927221915648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_080826788EEF4C4B9E68882686613993]' role='measure' type='quantitative' />
      <group name='[Top Customers by Profit]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location' />
        <drill-path name='Product' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='5' max='20' min='5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_080826788EEF4C4B9E68882686613993'>
            <properties context=''>
              <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='cat-sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cat-sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[none:State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;British Columbia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Manitoba&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Brunswick&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Newfoundland and Labrador&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nova Scotia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Ontario&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Prince Edward Island&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Quebec&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Saskatchewan&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[none:State/Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-7518358.2595311543' min='-14901268.990629291' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6628000.7164729461' min='1691235.0435016698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State/Province (2)' id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
              <geometry column='[Sample - Superstore].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='State/Province (3)' id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
              <size column='[Sample - Superstore].[avg:Sales:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DE4AC73E-7177-4DCA-A467-5CA1B57BD898}' />
    </worksheet>
    <worksheet name='profit-ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Profit-ration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_1368249927221915648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1368249927221915648]' derivation='User' name='[usr:Calculation_1368249927221915648:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-6991105.7584335934' min='-14247008.577808594' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6615518.8709711768' min='1763680.1762104677' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_1368249927221915648:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='density-kernel-size' value='1.4832596778869629' />
                <encoding attr='density-color' palette='red_blue_diverging_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9D707065-3213-4488-907B-26580BED27EE}' />
    </worksheet>
    <worksheet name='region-sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Region-sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-7056042.5213395711' min='-14291257.808480997' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6515519.3680313854' min='1677513.9028340569' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[Latitude (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='State/Province' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[Sample - Superstore].[none:Region:nk]' />
              <size column='[Sample - Superstore].[avg:Sales:qk]' />
              <lod column='[Sample - Superstore].[none:Product ID:nk]' />
              <path column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{48979531-0B00-4797-A2C4-62CB22AC2C2C}' />
    </worksheet>
    <worksheet name='wind-map'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Wind-map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='storms' name='federated.0w7sszv1oa6emo12375df0gc0kdi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w7sszv1oa6emo12375df0gc0kdi'>
            <_.fcp.ObjectModelTableType.false...column caption='storms.csv' datatype='integer' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='storms.csv' datatype='table' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL031987&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL031992&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL041991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL042000&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL051994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061988&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061995&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061997&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL062003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL071999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL072002&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL072003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL081992&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL081994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL091994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092000&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092001&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101993&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL102004&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL111999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL121991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL121999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL141995&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL142002&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL142003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Al202011&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]' included-values='in-range'>
            <min>1987</min>
            <max>2011</max>
          </filter>
          <slices>
            <column>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</column>
            <column>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:long:qk]' field-type='quantitative' max='-2040417.8586464114' min='-12090680.628582735' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:lat:qk]' field-type='quantitative' max='5648639.1669099322' min='-1071717.3501981888' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' />
              <size column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' />
              <lod column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' />
              <path column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:day:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:lat:qk]</rows>
        <cols>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{401C9CBE-A6AA-4116-90B7-C6FD86252C0A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='map-dash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000' />
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33250' id='16' name='profit-ratio' w='33300' x='45800' y='63250' />
        <zone h='33250' id='3' name='wind-map' w='33300' x='3300' y='4125' />
        <zone h='33250' id='10' name='region-sales' w='33300' x='44500' y='4250' />
        <zone h='17000' id='8' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type-v2='color' w='11700' x='54000' y='38875' />
        <zone h='10750' id='9' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type-v2='size' w='10700' x='25400' y='25750' />
        <zone h='17250' id='12' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type-v2='color' w='8800' x='68700' y='38875' />
        <zone h='17625' id='11' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type-v2='size' w='10000' x='44300' y='38375' />
        <zone h='33250' id='13' name='cat-sales' w='33300' x='2400' y='62125' />
        <zone h='9750' id='15' name='cat-sales' pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type-v2='color' w='14000' x='46800' y='85750' />
        <zone h='9500' id='14' name='cat-sales' pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type-v2='color' w='14000' x='64000' y='86000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='266' h='33250' id='3' is-fixed='true' name='wind-map' w='33300' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17000' id='8' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type-v2='color' w='11700' x='54000' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='9' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type-v2='size' w='10700' x='25400' y='25750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='10' is-fixed='true' name='region-sales' w='33300' x='44500' y='4250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17250' id='12' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type-v2='color' w='8800' x='68700' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17625' id='11' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type-v2='size' w='10000' x='44300' y='38375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='13' is-fixed='true' name='cat-sales' w='33300' x='2400' y='62125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9750' id='15' name='cat-sales' pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type-v2='color' w='14000' x='46800' y='85750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='14' name='cat-sales' pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type-v2='color' w='14000' x='64000' y='86000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='16' is-fixed='true' name='profit-ratio' w='33300' x='45800' y='63250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{176FFAC6-2D75-4970-826F-80DDE2F66E64}' />
    </dashboard>
  </dashboards>
  <windows source-height='177'>
    <window class='worksheet' name='wind-map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:wind:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:day:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:hurricane_force_diameter:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:month:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:tropicalstorm_force_diameter:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A683AC58-330D-4B48-B338-B086EEB06A90}' />
    </window>
    <window class='worksheet' name='region-sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type='size' />
            <card pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Postal Code:ok]</field>
            <field>[Sample - Superstore].[none:Product ID:nk]</field>
            <field>[Sample - Superstore].[none:Product Name:nk]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:Row ID:ok]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{856BB8FD-752D-4626-9BB0-36233C173E67}' />
    </window>
    <window class='worksheet' name='cat-sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='5' param='[Sample - Superstore].[avg:Sales:qk]' type='size' />
            <card pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34F32BBB-2C2D-4EC2-9AA8-A70C8AD57C01}' />
    </window>
    <window class='worksheet' name='profit-ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:City:nk]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CE52C81-563E-4EB6-A05B-47A3A376128B}' />
    </window>
    <window class='dashboard' maximized='true' name='map-dash'>
      <viewpoints>
        <viewpoint name='cat-sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Sample - Superstore].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='profit-ratio'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='region-sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Sample - Superstore].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='wind-map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{D1307A85-E9BA-4D6F-8CA8-7F03A9CF34EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='cat-sales' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map-dash' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='profit-ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='region-sales' width='192'>
      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
      efj/ulaBVNeKAREAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='wind-map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
