<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='data' inline='true' name='federated.1q9ip551dg882h1cjei6n0do14ww' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0j51rse14htetu1h0wdll1goia0v'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (2)' inline='true' name='federated.1r9k1d40zgnkdu18z8tiu1isixkk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.09vcg6103lbfo7198wfx91gimbj5'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (3)' inline='true' name='federated.0gwwu8e03ozise1ghdi8s0w0s3zz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.01meg9102d6s0h16pvm610cnow1l'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (4)' inline='true' name='federated.0gvr9vo1u048ah1eqceaa031pybw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.19vgsb61iko0nl12yod2n1xn2hpg'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm_Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='string' name='Basin' ordinal='3' />
            <column datatype='string' name='Basin_1' ordinal='4' />
            <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm_Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='string' name='Basin' ordinal='3' />
            <column datatype='string' name='Basin_1' ordinal='4' />
            <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storm_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Storm_Name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Storm_Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Basin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin_1]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Basin_1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Speed (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_Speed (kt)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Wind_Speed (kt)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Basin 1' datatype='string' name='[Basin_1]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Storm Name' datatype='string' name='[Storm_Name]' role='dimension' type='nominal' />
      <column caption='Wind Speed (kt)' datatype='real' name='[Wind_Speed (kt)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_463AA86207664DCCB343FE29F511FFE9]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_463AA86207664DCCB343FE29F511FFE9'>
            <properties context=''>
              <relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Storm_Name' ordinal='0' />
                  <column datatype='string' name='Date' ordinal='1' />
                  <column datatype='real' name='Longitude' ordinal='2' />
                  <column datatype='string' name='Basin' ordinal='3' />
                  <column datatype='string' name='Basin_1' ordinal='4' />
                  <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Worksheet (jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau)' inline='true' name='federated.1wf4wfg1ajmb8t1cd07mh1rsvyl5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau' name='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Python/Downloads/jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F6:no:A1:F6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>false</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Worksheet' datatype='table' name='[__tableau_internal_object_id__].[Worksheet_3129C4C19FC942899B331CD544023247]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Worksheet' id='Worksheet_3129C4C19FC942899B331CD544023247'>
            <properties context=''>
              <relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
                <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='string' name='F2' ordinal='1' />
                  <column datatype='real' name='F3' ordinal='2' />
                  <column datatype='real' name='F4' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='integer' name='F6' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data1' inline='true' name='federated.1t72dvf1ymudhb19ed18a0k2b1w8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data1' name='textscan.19pvvmn1y8n15z196det20x8yoxl'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Latitude ' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='string' name='Basin' ordinal='4' />
            <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Latitude ' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='string' name='Basin' ordinal='4' />
            <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storm Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Storm Name]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Storm Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude ]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Latitude </remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Basin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Speed (kt)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wind Speed (kt)]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Wind Speed (kt)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[Latitude ]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data1.csv' datatype='table' name='[__tableau_internal_object_id__].[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data1.csv' id='data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3'>
            <properties context=''>
              <relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Storm Name' ordinal='0' />
                  <column datatype='string' name='Date' ordinal='1' />
                  <column datatype='real' name='Latitude ' ordinal='2' />
                  <column datatype='real' name='Longitude' ordinal='3' />
                  <column datatype='string' name='Basin' ordinal='4' />
                  <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='storms' inline='true' name='federated.0w7sszv1oa6emo12375df0gc0kdi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='storms' name='textscan.0zriyv01x1emtg1b1xesx0mzkifx'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='storms.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='month' ordinal='2' />
            <column datatype='integer' name='day' ordinal='3' />
            <column datatype='integer' name='hour' ordinal='4' />
            <column datatype='real' name='lat' ordinal='5' />
            <column datatype='real' name='long' ordinal='6' />
            <column datatype='string' name='status' ordinal='7' />
            <column datatype='integer' name='category' ordinal='8' />
            <column datatype='integer' name='wind' ordinal='9' />
            <column datatype='integer' name='pressure' ordinal='10' />
            <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
            <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='month' ordinal='2' />
            <column datatype='integer' name='day' ordinal='3' />
            <column datatype='integer' name='hour' ordinal='4' />
            <column datatype='real' name='lat' ordinal='5' />
            <column datatype='real' name='long' ordinal='6' />
            <column datatype='string' name='status' ordinal='7' />
            <column datatype='integer' name='category' ordinal='8' />
            <column datatype='integer' name='wind' ordinal='9' />
            <column datatype='integer' name='pressure' ordinal='10' />
            <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
            <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wind]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>wind</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tropicalstorm_force_diameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tropicalstorm_force_diameter]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>tropicalstorm_force_diameter</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hurricane_force_diameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hurricane_force_diameter]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>hurricane_force_diameter</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='storms.csv' datatype='table' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
      <column caption='Category' datatype='integer' name='[category]' role='measure' type='quantitative' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Hurricane Force Diameter' datatype='string' name='[hurricane_force_diameter]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='integer' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Tropicalstorm Force Diameter' datatype='string' name='[tropicalstorm_force_diameter]' role='dimension' type='nominal' />
      <column caption='Wind' datatype='integer' name='[wind]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AL022006&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AL101993&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arthur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Danny&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gustav&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ivan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nestor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL011993&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL072003&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alicia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emily&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gamma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imelda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melissa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oscar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sebastien&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AL021999&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AL092000&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ernesto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isaac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mitch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tammy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AL042000&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AL121991&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hermine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joaquin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lili&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nineteen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Two&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL031987&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL101994&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Felix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hanna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeanne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rafael&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Three&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AL022000&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AL092001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gloria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isabel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kirk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nadine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AL071999&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alberto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eleven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frederic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Igor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Juliet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marilyn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Opal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sandy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wilma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL012000&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL081992&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Epsilon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ingrid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Otto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AL061997&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AL142003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonnie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edouard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Omar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sally&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AL022001&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AL092003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cristobal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Evelyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gonzalo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isaias&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Klaus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paulette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Teddy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL051994&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL121999&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Five&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hortense&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lisa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rita&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vicky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AL061988&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AL141995&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dorian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hugo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joyce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lorenzo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Odette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Victor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AL062003&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al202011&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eight&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fred&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Julian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;One&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilfred&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AL072002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alex&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chantal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabrielle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ike&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matthew&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ophelia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zeta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AL031992&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AL102004&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fernand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jerry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AL022003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AL101991&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fabian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isidore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AL021992&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AL081994&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erika&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georges&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michelle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pablo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sixteen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AL061995&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AL142002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bob&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Four&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Humberto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Juan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roxanne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vince&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AL041991&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AL111999&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beryl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Debby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fifteen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL021994&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL091994&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Claudette&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katrina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mindy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paloma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='storms.csv' id='storms.csv_7967090155FA414AA590942EF916D02D'>
            <properties context=''>
              <relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='integer' name='month' ordinal='2' />
                  <column datatype='integer' name='day' ordinal='3' />
                  <column datatype='integer' name='hour' ordinal='4' />
                  <column datatype='real' name='lat' ordinal='5' />
                  <column datatype='real' name='long' ordinal='6' />
                  <column datatype='string' name='status' ordinal='7' />
                  <column datatype='integer' name='category' ordinal='8' />
                  <column datatype='integer' name='wind' ordinal='9' />
                  <column datatype='integer' name='pressure' ordinal='10' />
                  <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
                  <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Sample - Superstore' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0ozsbj20cdelf51evvdk71kugqg0'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Python/Documents/My Tableau Repository/Datasources/2024.2/en_US-US/Sample - Superstore.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='data' name='textscan.0xciy9s16mj00a1bbgic71i9d2ja'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:\Users\Python\Downloads\data.csv' dataRefreshTime='' directory='C:/Users/Python/Downloads' filename='C:/Users/Python/AppData/Local/Temp/TableauTemp/1cnqi4b19ytls41a13nnr0impu2t/data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>81352</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Ratio' datatype='real' name='[Calculation_1368249927221915648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_080826788EEF4C4B9E68882686613993]' role='measure' type='quantitative' />
      <group name='[Top Customers by Profit]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location' />
        <drill-path name='Product' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='5' max='20' min='5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_080826788EEF4C4B9E68882686613993'>
            <properties context=''>
              <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='cat-sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cat-sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[none:State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;British Columbia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Manitoba&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Brunswick&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Newfoundland and Labrador&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nova Scotia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Ontario&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Prince Edward Island&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Quebec&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Saskatchewan&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[none:State/Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-7518358.2595311543' min='-14901268.990629291' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6628000.7164729461' min='1691235.0435016698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State/Province (2)' id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
              <geometry column='[Sample - Superstore].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='State/Province (3)' id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
              <size column='[Sample - Superstore].[avg:Sales:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DE4AC73E-7177-4DCA-A467-5CA1B57BD898}' />
    </worksheet>
    <worksheet name='profit-ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Profit-ration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_1368249927221915648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1368249927221915648]' derivation='User' name='[usr:Calculation_1368249927221915648:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-6991105.7584335934' min='-14247008.577808594' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6615518.8709711768' min='1763680.1762104677' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_1368249927221915648:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='density-kernel-size' value='1.4832596778869629' />
                <encoding attr='density-color' palette='red_blue_diverging_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9D707065-3213-4488-907B-26580BED27EE}' />
    </worksheet>
    <worksheet name='region-sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Region-sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-7056042.5213395711' min='-14291257.808480997' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6515519.3680313854' min='1677513.9028340569' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[Latitude (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='State/Province' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[Sample - Superstore].[none:Region:nk]' />
              <size column='[Sample - Superstore].[avg:Sales:qk]' />
              <lod column='[Sample - Superstore].[none:Product ID:nk]' />
              <path column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{48979531-0B00-4797-A2C4-62CB22AC2C2C}' />
    </worksheet>
    <worksheet name='wind-map'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Wind-map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='storms' name='federated.0w7sszv1oa6emo12375df0gc0kdi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w7sszv1oa6emo12375df0gc0kdi'>
            <_.fcp.ObjectModelTableType.false...column caption='storms.csv' datatype='integer' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='storms.csv' datatype='table' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL031987&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL031992&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL041991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL042000&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL051994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061988&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061995&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061997&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL062003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL071999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL072002&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL072003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL081992&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL081994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL091994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092000&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092001&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101993&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL102004&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL111999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL121991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL121999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL141995&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL142002&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL142003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Al202011&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]' included-values='in-range'>
            <min>1987</min>
            <max>2011</max>
          </filter>
          <slices>
            <column>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</column>
            <column>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:long:qk]' field-type='quantitative' max='-2040417.8586464114' min='-12090680.628582735' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:lat:qk]' field-type='quantitative' max='5648639.1669099322' min='-1071717.3501981888' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' />
              <size column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' />
              <lod column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' />
              <path column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:day:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:lat:qk]</rows>
        <cols>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{401C9CBE-A6AA-4116-90B7-C6FD86252C0A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='map-dash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000' />
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33250' id='16' name='profit-ratio' w='33300' x='45800' y='63250' />
        <zone h='33250' id='3' name='wind-map' w='33300' x='3300' y='4125' />
        <zone h='33250' id='10' name='region-sales' w='33300' x='44500' y='4250' />
        <zone h='17000' id='8' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type-v2='color' w='11700' x='54000' y='38875' />
        <zone h='10750' id='9' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type-v2='size' w='10700' x='25400' y='25750' />
        <zone h='17250' id='12' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type-v2='color' w='8800' x='68700' y='38875' />
        <zone h='17625' id='11' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type-v2='size' w='10000' x='44300' y='38375' />
        <zone h='33250' id='13' name='cat-sales' w='33300' x='2400' y='62125' />
        <zone h='9750' id='15' name='cat-sales' pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type-v2='color' w='14000' x='46800' y='85750' />
        <zone h='9500' id='14' name='cat-sales' pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type-v2='color' w='14000' x='64000' y='86000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='266' h='33250' id='3' is-fixed='true' name='wind-map' w='33300' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17000' id='8' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type-v2='color' w='11700' x='54000' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='9' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type-v2='size' w='10700' x='25400' y='25750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='10' is-fixed='true' name='region-sales' w='33300' x='44500' y='4250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17250' id='12' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type-v2='color' w='8800' x='68700' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17625' id='11' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type-v2='size' w='10000' x='44300' y='38375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='13' is-fixed='true' name='cat-sales' w='33300' x='2400' y='62125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9750' id='15' name='cat-sales' pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type-v2='color' w='14000' x='46800' y='85750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='14' name='cat-sales' pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type-v2='color' w='14000' x='64000' y='86000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='16' is-fixed='true' name='profit-ratio' w='33300' x='45800' y='63250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{176FFAC6-2D75-4970-826F-80DDE2F66E64}' />
    </dashboard>
  </dashboards>
  <windows source-height='177'>
    <window class='worksheet' name='wind-map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:wind:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:day:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:hurricane_force_diameter:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:month:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:tropicalstorm_force_diameter:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A683AC58-330D-4B48-B338-B086EEB06A90}' />
    </window>
    <window class='worksheet' name='region-sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type='size' />
            <card pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Postal Code:ok]</field>
            <field>[Sample - Superstore].[none:Product ID:nk]</field>
            <field>[Sample - Superstore].[none:Product Name:nk]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:Row ID:ok]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{856BB8FD-752D-4626-9BB0-36233C173E67}' />
    </window>
    <window class='worksheet' name='cat-sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='5' param='[Sample - Superstore].[avg:Sales:qk]' type='size' />
            <card pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34F32BBB-2C2D-4EC2-9AA8-A70C8AD57C01}' />
    </window>
    <window class='worksheet' maximized='true' name='profit-ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:City:nk]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CE52C81-563E-4EB6-A05B-47A3A376128B}' />
    </window>
    <window class='dashboard' name='map-dash'>
      <viewpoints>
        <viewpoint name='cat-sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Sample - Superstore].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='profit-ratio'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='region-sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Sample - Superstore].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='wind-map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{D1307A85-E9BA-4D6F-8CA8-7F03A9CF34EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='cat-sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map-dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='profit-ratio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='region-sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Ak2X3f+UlfWb6qve/xZmftrAcWWCyAJReEIwmJpMQTKTGO0gUZcSEG
      /7iI40UoGMHTSWfiLi6kI+9EHcmjAUCABp4ABLe7WOxi/czOju+Z9r68zcrM+6P65WRlZ1VX
      z85ghwS+ER3dnfa9l7/f7/3c+z1peXnZBZAkCdd1AXBd1/tblmWCkGUZx3G8/3VdR5Ikms2m
      dx+AYRhEo1EkSeq4v9FoeNfatu2923+vJEnIsoxt27veL57nuu6uZ4dda9s2iqJ4z/ff43/n
      XhD3KYpCIpHo+74fNer1OrVaDQjvqzjmH0eBWCyGpmk3/W7HcXAcB1VVb/oZtxOWZVGtVr0+
      q4KIuhFC8Li4VlVVbwAty+o4ZxgGhmGgKAqGYez6CKVSqeMe/2/RHkmSOpisG4JM4//I4sd1
      3V1MK8tyBwP1wwjieaZpekx/J6JWq4W2zT/W/h/oZI532rd+BNO7BdG3Wq3WZtSgVAgSQjcG
      aLVau64TUrvVahGPx9E0rUOyC+kgCLIX0/Uj2YPtUxQFgFarhZ+x/Uzln+X8/ekHntTwMf+d
      Btd19xQcYUQvfjcaDSzL8ghF/A7TBPZ6/p0ISZKIRqO4rkuxWET1D5ZfTQjeBDcG1z9gfgL3
      S+1CoYCu654a4ziOp/b0M0C9iLLbMzRNQ1VVbNumXq93nBOMF3yGqqo4jrOLobtBlmV0Xe/r
      2h81RD/6YWhZlr3vJ76pGFPHcajVap6gcxyHVCp1u5v/I4Usy6iqiioIIEggfgQlRvC3/xpx
      vNVqdSWqsFkmKIn3o5IIJrQsy2MA8UwxK4RBEHOlUtnzXQKRSOSOlXCyLKNpGrquh459mMoj
      BFZYn1zXpV6vE4/HO451u/7vCyRJ8r6j7B+AvaTuXhCEuB/Dstfzu+mx3YzYVqtFs9nsMMYV
      Relq1AkVrV8oikI0Gu37+ncDQm3ZC/2oSgJ+g9ZxHEqlUs/n1ut1ms1mX89+tyDLcvtHHFAU
      xdP1gj+9ZgeBbsQfJNhbgeDz/Dq+ZVkdM1QvHVaW5a5qXxhuhrHfDSiKEtrfoOAIzrjBH4Eg
      o/QSAq7rsrGx0bdK+W5DhRud96sOQfgHRLgVe6Ff6RKGXtNsGPH7jweJtFAoYFkWhmF0tEkY
      fMIb0A9x79XnOwVCv+0lhf1CImz2F/9rmtYx5nuNgbAZxJje6aqSCjekdJBIghCMIgyobp4V
      IX3CZoMgggaYuM/vpuxFnMFnhr1DtEe0G9ruMF3XqVarfXs47lTjN4j9em3Cxld8a6FS9tN3
      x3EoFovIsky1WvXG+E5GxygJvdD/458Sw6Rvt+P+8+JHPM+yLLa3t71ZB/B+C4bY3Nzct46+
      F/z9syyLcrm8r5kqLCh3J0IEGv0ICph+JfN+bAUxtuLvRqNxx6uNnnXjd2/6EeYrDp7vJum7
      XVssFhkaGqLRaLCysuIFy1KpFKurq5im6bkyV1ZWOH78OIqi0Gw2sSzLU9XEM29mmu3WX3+f
      g3240z8m4EntINH2473pds4wjL7G2R8LajQaaJqG4zh3tOrYEa++VR/Yb5SGnYvH46yvr6Oq
      KqZpYhgGmqZRq9W8/+v1OtVqlWg06qlm4pnCdQs3pHIw4BVEmJs1zCgMXnen67BBWJblRdl7
      oZfLW6hPYsauVCqei7XX80TsQNd1FEXBcRzK5fIdHUNQgykC3RAMeu2FMAIT0DSNoaGhjmtc
      18U0TRKJBIqieLksjuOQz+dxHOcdqSD7sT+69cPf1juRMQSxBoNh/nb77bSgU0AgGOwM3ttt
      LIXaVSwWvVQYEQ+6U3ODVLiRFxOmyvgN2m6qTjcPQq9j4n8hzW3b9iK5tVqNer2+b/XjZl2u
      fqIIcw+KZzabTRqNhjcuqqruy9i83ajVap4beC+VJywvShz336NpGpFIxAsWGoaBaZod396y
      LBqNhpfYmEqlqFar3jfUdZ14PH5HCg3VT+Bh7sCghyfsnB/dDGL/Of81IiJXKpW8aVQYT70Y
      LkxV8T9XDHyj0eg4thezduuneHaxWPSO67pOOp2+Yz7szXhcwmZ2///NZpNWq+XNvpIkoWma
      p9+3Wi3y+fyu+03TpFarEYlEOnKz7jTIcCMqFoTfa7If+0BIyDCJHJxSq9WqJ7Usy6JWq3UN
      oojnBdsafI+iKCSTSQzD6OjLXn3odr7bvWHG5rsJRVFIpVL7doH2Ghe/pw7aHqZCoUC9Xvf+
      7iY4hfFr2/a+0k1+lOhQzPbyud8MukkWAb/RFkbg/UiO4HkR1fa7At+p9OmmUrRarTvGyyFi
      OZlMhlKp5KlrYdft9Z3DnAYCQur3gsgoFffeqYGxDlHRbSboF37p7vcJ9wt/zEA8r5cd0E3n
      bzablMtlLy9e07QOvfVmEcbAwUVAdwJUVfWcCUHsx//v/7vXTz+2l/gmd9KMCbST4YLegHdC
      KP16i4Sk90dnYTeR+Z8XlCRC0odBqFHCrdpPzk8//Q62705kAOEqjsViu871+jb+6L64di/1
      t9uY6bruGeUC9XqdSqVyRzGBfLPSuhv28i+HDfJ+PDziOfF4vCNNtxvENBxcHxCEWMDTD/xt
      9huIdxIkSdp36nbQ5uv3uwSfIe4zTdMTPOKZ/iDmnQA12Jjb1bigN6mf93TzAum6vkvyhnmb
      /CrdXtmJYcZ1P22TJMnzc4sPLd79TmfTdwrhqu0nMAb9C6PgPd08fyIavJ8Z5UcN1e8Dvt0N
      28/ze10bjBEE7xHnRHzBT5hBiHRpSZL6JhT/+8SzK5WK5w+Htv88Ho+/62uH98MAQXSL8wQR
      Jnz8aqrfbW1ZFpVKhWQyeUcYxCrgha17QRBJr+tuhxfJ/27onoAnrvNDlmUvdygMsix760NL
      pdJNq4H+2IBAs9lke3vb85lHIpHbwgx7eVb2qwJ1u7+XizisPX7bLUgXvdLuf9RQgw3uBr/+
      HUYot6MzYYEzgeAAhsUbxOL1er0eqt87juOVyLhdhlmz2fRWSCUSiV1VMm4FbgUxhX37vTSD
      bjTjuq632CjoFFFVlUgk8o7aeishA3vmavgJ0c8IYV6cW9KoEGM52J6gKy4IsSpK5BR1g8gw
      vV0Q2ZDCd16tVm/p81utlheU6uUmFucURenqHu2lVoah24zhV3eCuNOMYNnP5f5Qul+CCvhn
      Cz/xB//uhX4MQyGNew2wON9tMB3HoV6vv6tGVzBIJlStfis37AWRgCYM/KCqF5zZXLcdnY3F
      Yvtigv1CMIBwVPhpTHiCbtUYvFN4SyIdx+lgAMuyvMSosKzBoMEpENT5gkZRr8BW8DnQfXXZ
      XgiLbfwoB7zbrOq6Lrlcjng87qlDN0t0QvCoqoqmabsi6K1Wy0tRFsdE+oamabfFfesfY8Mw
      vHwg/2ztr1r3btdYkhYXF70W79RJ2XM6FWuCu328YNh7P+41wXBBtUugG+P1guM4P9KsTdu2
      O5Z0dmurqDIRiUR6BvV6oZv+b9s2uVxuV9U+8XcvQXSrBIWiKFSrVUzT3OWylqR2smIikXhH
      pRjfCRqNRmcqhCgr0o1Y9lI5/IQvuFvX9XdUSyf4zl56/50AP/H3c22pVPII9Wb61E0A+ctP
      9sJ+gl43A78bNMh4vTx0PyrsmqP9hU39UqPXjBCEX9fzW//d9L5e7xHH/DNC2DWmaQKEGr3C
      CL1dSWv+tgfbFzZuQbRaLba3t4nH497Y+70o4r5+hIjrtjNsg+PQq01Axyq7/TBDo9HANM1Q
      L5pQuYSaI8bGL2Aty0KSJC9g9qNWh9QwghILG7pF+MKksP/j+xnAz+FBXbyXbt7N/xzGLJqm
      YRhGz5Tb2z1j7FVhTaCX0PAXnBLXCR1fBNW6Qej85XJ5z7QPcb0ktetkapq2y17YC6LcJbQZ
      2P8t/X00DKOn+ikWzgjv1I86QKbupQt2O79X+ZRu8DNWNwbr9cww/bXZbFIsFjsCLGFxgX7R
      y2AWpQcbjcau9Ap/wl23+7vp7GHXAZ4QMQwjlAGEu7FarXZd/NNNmLhuu4pbvV7vqgbpuo5h
      GFiW1VHuUlEUT7hpmualXovnKIqCZVmEZRoEx9e/3FXM0rIs35IM3r3g1QUSCBquQYLth0iD
      z/Ef68ZQYT7r4HN6MU63atX7xV736Lq+q5iubduhauOtRC/1TTC/QJga1mvmEWMvjFG/4Wya
      Jq1Wy+u3gG3bWJZFLBbz1Gb/e0zTpFwud83CDTKD+F/MgoLBYrHYbXVg7FoQ4/87KBX2Q1BB
      gg1Lew6+W5zvtXgiKNXCGCTY5v0wQy/iVRSFer3eQWxh7s5gP/s1inuhGwNIktQhjf2qqF8t
      6TUjAZ4qJCLjktTOJhW2QbDfgjj9/RW/xawhZucwdTnsbwFZlr09Jm439lyqHyQ4kQrRj6QT
      AxnMjPQf98804lwvQzloRAXP7dUWP3EG1bi9+hT0WPSqeeMnwpudjfpFLBbbtTxTxAj86eBh
      /Y1EIliW5UXExSo6oR4J5u5mzwX/FwtxhH0hmKAfCJqwbZtms4kkSX2lvL8T9FWrIkiksFvK
      BRGmrviJsJvatRe6EdJexBt2n7hH7GPQj1tO3BNWUqXftt4MarVa16K3YTEEVVW9ytgiGCWI
      S5LaO6QIe0ZUcQtruygdKeoCBQ1s/3s1TUNRFBqNBo1Go+uqtCBENRAxAwGevSHaeDtSbsBX
      FqWXASkgzguX4l4qTTd0Y6Swc37JvpfXqJfK5A+GCRejkDKJRMKb6guFwp5FZYOz4o8CvdYz
      BPsuAmxirARxibaL9bqWZVEsFnsKDn9KuRAWIlbkt33gRl6VUGFzuVxfQk3styZqGgmIXK5S
      qUQymfQY4VZC9U9xQQSJza/j+eMFYf5j/3Tbr/89OGuE6bC9DOlgu/15QOIeRVGIx+MoikKh
      UPCYQUi5aDTakwHEM9+thfBhnhRJkrw4C7SZRbiEu9Xq7DVjhgkTSZK8IB/cMFKbzabHXGHG
      916QZZlyuRwaCBS2h2CmWCxGMpnc85n7gRr82L2km39gBHeK9Ing/cFn3qy03Eva9lJtukEY
      riJEL2YHSWqH5zVNC42i3orKBvv1Eon3CderX6L7nxlUT0SASbTVf24/bQgzYMUsUK1WO3bL
      3G+/xNgLxu1lo92ukuv7nk/8UllY6f4O9Eqj2C/60enFO/0/Ye0VEAvkAa92ZaVS6Sj8FCbd
      RVtuNmfH355e07ggDP+P+PBCiovFO/6+9Upn979P3NOvTh38BsIYFga067oUCoVds7b4+1bt
      FHO71E01+OBeLwoaf0IatVqtXZmIYVPhfjoRdOMF7++l8/u9TH7iEclZIkdJIFg/KIyY/B6f
      d/IxgunJ/uf18mSVSiUymQzJZDJUCooyjUFPTzQa3RW3EOjmfNjLJhDQNI1yubxrkY/4W5Sl
      CWtvNzU2qEr5r7sd8QC5l0EqjgU9N8EPJUlSR/AkTLqEeX+CCNP1g+/d6xlhz4LOtOpgBWVR
      uUwQifCY9IugxO52Luw+/+8ggn0VSy/DapLKshy60kp4t/zvDO7/0KtPYe31Q7gpw2YsoOcK
      uLDv2+ua27HvmLceQLws2BBxLEz/8huWQId3qJsBvRfC7tmPxBXvDmamBiVLUM/3zwxCDeo3
      TtCtn2GCInjPXjqtn0DE4vt4PL5rnUS32bBard70fl1hTBB8j+u6njcNbpShaTabGIbR13Za
      YYI1bFxuRo3eC14qhOBcf6PCGCL4QcX//n2pBNf7iagf42UvSbAf+Gei4EcSCO6jJeqS+vNf
      /P0OjkOvD9KL+MX5vZ4VRtxipkqn0x4TCIM3TEKKRLXgO7u1JWzmDs6kQTUuFot57xcOBv/Y
      h6l9Ye8SCF4vbLvbERRTgxLT/+KgYRNGBMHBFd4IsUJpr8EPYj8eir2e04tpms0msVjMs2FE
      FTPhjhNBHb9x/E7edyvRaDQol8ueB8ZPfN3aJtBttg8KqOD39xO18CgFv5PYyEQkwQE9PYRh
      Y+afqQWziaK//rUFtwqeEexPSwgblG4SKqwDYqNmvxTohr0k5a1CUC0Ti1FkWSYWi3n+Zrgh
      Nf118cOe1+v/ftqzH0YPXluv1z03bi6X65k30y1z1+8sCIsD+b+vsCVEhmYw7cKvZgo1uNsG
      HHsdEwwnGErsGGTbtreC7lahY5fIbsbcXtN9sEOueyMd1r/RXT963e3Q88RHDialua7rZTUK
      dUiSJE8N2msX+b10d/GOmzkf9g7/tZZlkcvlvBnsZgoRiwXytVqtKwMI+DNCwxwVwXv6+a5h
      9BCJRDBN07PFHKe9Q5BlWV7C3q2EZwT7uTiot0HvaTTsOjHA/khhv7jV0xx05uoHpZd/QQe0
      +6Dret9t9guIoM+9F/phgm4EBXg5+mHX9/NuMfMJWyeo9vj7Jd4jjoVpDP1+s27X6bresb+B
      67reMt297r1ZyH4j1e81CTa4289e8Ifouxm33WaFfmeevSD65Q/Y+c85jrOraFU/EtXf9l67
      s/caq736tx9ju9sMHgYhnHq5FoNt9i9c8a8l7iY0/c8JZgQHx0RV1Q7DHtpqqtiHQETubzUD
      dLhBRcOCCEo4v6Ei7glOi/7nCm9QmBFzq4zebghrY1AVEtFN0zQ9ghB5LntBuPpkWd6VUdkP
      3kn//eMc/IZ7SWUhXcOOd7Nveqlz3Rg9GDgNa5eqqp6R62+HSOEWs9U7jcKHQVUUpUP/3av2
      Z7Dx/Ux//ohsP9ffyk4Gp3T/h/K3RxhZ4vparbbnLOC6rueC3KsCg1jZ5F/3eysQVJH8Rmsv
      +BfQCPRauNPNFhFFgP0eP/+1goDFs0VRLP9C+bDAnuM43sJ+wzC8FWe33AukKAqRSGRX2msY
      wmYCcbyXlPAbTt06ELz/VniGuunmYW0Q0r6XChQmrfsp6yFWOIlZ4lZFNIOz7n5nkrBvHZTM
      /jhCEEJyi+CX/zqhXolkyf3m89frdW+G0jSNQqHgLZoXzBB8581AFY00TdPbpG6/6MeYC5MO
      wXPiGXt5i/bT6eAHFc8KEkw/ksU0Te9j7AdCWNxsmcZuKkSYsAgKml59CvPUiOuFG7LVanVV
      7SKRSEf9fz+EOpPP55Gk9t5lIg19r3F2XbfjndVqFdu2Pfen3+v1TreqVaHNbdFotKNERrci
      rvshviBR9WPw7ed8v16W4P/dmLHX80SUeGBggGg0uq8it6JcSVh6RRhjd3MZdnMi9Jqx/c/t
      B/5v5t8T2f8OIdUFQYbZIGJtBeDVKRKL6PcyZv1LM+HGLFupVLxMg3q97q3lEIx1M1CF3i/q
      ySSTSQqFAuVyeZeUCZMqQfUnzNcu7hFL3IIfJkyaBXV22K2WdPO69CKIfgxEYbP4JbZYHyvi
      G/uFiDIHVbF+2t+NIfpBv0wQZL4wA1mUKhE6v23b3vJHv6dP13Uvyh6LxYhGox5R92tXhRn1
      ruvu8lwJBrhZSMVi0a1Wq17DIpEIq6urDAwM9Ayv+xsc/F/oe0K98kMwiCCEMP01ON13QxgD
      iGV6vYirGzP7nxGU1qqqdjCB3xvWLwzD8DaO9u+NHMzt76fvoj9CgIUxTlj//Hv3Bm0kf0Q4
      bHaMx+Nemctms0mtVvMi6P62AN7qrf1m1YqNRfpFPB73cpH2aw80Gg1UUVVN6FyNRgPDMEin
      07uqjIXp5cFB96+uClacFs/weyq6NbwfIgibJUT02f+MMOLqZZM0m82OOjjiHlHrRoyVSA9I
      p9M9q7YJI9g0TU91EG0vFotUq9W+P17YrCn+30vdNAzDU3GDdfoVRSGRSFAul0OFnmmaHvOK
      JYzdktygP+dAEDez4aBYnywWz+8XqiS1faz5fN6z+MMWvPczhfZDsECHxLpZ4hfX+X+Hneun
      Pd2Oh/UpHo975T7Edevr68iyTDqd9qSjf4vSWCxGqVTyFrX4p2zDMDpq8fjf36sPe7kEhQDy
      CwBRztB1XW/vML/KUygUQvV5VVWJRqPU63VKpVLX7yOOGYZBKpXat0QOrl3oB81mE+HJvBl4
      uUBieRvglacIS2YLmxq7SdTg32E2RVBHDQ5uvzpsmK0iUrT9XoNekl9AZIH2Whrpv39kZATA
      Iw5FUdje3vZmw3q9zsDAAPF4nK2tLQqFAiMjI976g2g06kldQZT78d7sdY34209cYd8jzEsl
      BGSlUvFiI/6xFGMsKsQJWtpv0Mp1Xcrlct/OBdF2YZc0m82bqkLulUURkkiSJC/HRFRcFpiv
      lrlSyPPI6DhxRQ0lftGosJr8/Rig3QzA/XZMfCixSV2wbmYvCEkUZICggR6EkOxidVYweinL
      MkNDQ7RaLVZXVzFNk2w266U1NxoN8vl8T+neSxj1Qj8etLBrxAJ44R7322+inZZleaVLBO3s
      1ysjIu/+2qB+Nc2/DkG0Xdd1L6VDCK1ea6PD0DEDiKlYHPNLDFlR+Ob1OYrNBhvVCkezAyQ0
      HVPVUCQJQ1FI6EZHFp+fEcLshzDvTxD7Jfwg6vU6uq57NS6FB+FrryxgtRw+9ugBJHqrUGFq
      QZAJ/B8qk8nsWgooCAXaBvXk5CTlcpnFxUXGxsY6AkZhUdpu4yCkbhC97IF+xlRUlTMMg1Kp
      xNbWFplMxiOy4DNE1qYkSTeVs6MoCtlsdtdxwQSi4JaYpUR2qCgKLNaf3DQDBBeAiJcLuI7D
      iYEhXlpZZK1SZjQW52AqgwTUWi3qdot8qUGx2aDlOuiygiorNOwWtutgKCq6omDZNi5gKioJ
      XUeRJVRJxlRVouqNVNeS1USTZVTeGRO4ruu56vw4NJbipQtrPP/WCqahcmA0yUDCCGXIvXRx
      AWEH+FN2hWrRaDSo1WokEgmvP8KeWFpawjRNj3GCakBwJvULKaHbB/NoxPle7e/VLyEUy+Uy
      hUIBXdfZ2NjwCmoNDQ2FCjAhlfcLYXsG4T8mSZJXwj2VSnljK5jkZmoGeeyiKIoXYBAd8g+Q
      4zg8PjbOpfwW27Ua57c22axVmUmmOZEdILFDvCKfRkxXfrenCziAuyNxy5ZFxbKouBaFZoOq
      ZVFttZAlidfWVrh7aITTA0Ne528lNFXm9JFhrJbDXbMDXF8rcnm5QDZhcGC0033XTeXxE5rw
      ovjXQQhVql6vU6lUME3TM0T9VeomJyep1WosLCx4hnQvIt6PPRRm0If1JWgbSZLkeQFFtqww
      7EURAf+CeHGPUD396nA3dcvvwdkLrut66RFiIxHLsjzb9WYT5TrmCz8DiJd2DLwLcU2nbrVQ
      ZAlFkqm1LK4W8zRaLU5kB4nJnZJIzCJC9dA0DYn2YCUVlaTia4LZPr7WqHPdNIm9w11DeklA
      WW5/oONTac4vbHNqJsuhsSS5SpM3rm4iAYfH0yRMtetzgu0SC9AjkYi30MafVFer1ahUKkSj
      Ua+8iYgJ2LbtBSGF56WbMyD4Xr+quZcNFWQOv30SvE6smkun07veF3RiiHv822w5jrPLjhSM
      YVkWhULBI+Z+vrFpmh3qlfD+CA3mHTGAsOj3cmc2Wi1ODg6xVCrhuC5Jw2C+UOCpmYNcK+Qo
      NZucHBgkoagd/mRN0/paIN/E5czmOqdHxpkvFbqmD/Tb2W7Eqynyzm+J6aEEl5aLHB5LkI5q
      PHBoEMeFS0t5ilWLwVSE2eEEjmOztF1jcaPMo8eHO8oO+jeP8Jcl9M8kfkYQQUK/K1LMHvl8
      nqmpqQ4C6xV4E5JXGO57zVjBe/02jX+sRZp3mP3WyxVaq9VIpVLYtk2hUPCYWdM0T2KXy+Vd
      Jd17oRvji3SImxWSuyyGoP94VweB2VSaYrNBNmJyvVDgsYlJvnD5PB+aOcjRVIbzuS0qrRbH
      M1kSirrLeu/WQVmW+cq1yzw1fYBCo8FAxGSzXiOr31jv6h/8XrOD/1zwGl3XiRo2hUo7BTwZ
      1ag1bZa3a0wMtPNXFAkOjcbRNI2tUoNXr2yiyBJn5jZ5/q1l1vI1PnjfJPHIjf3HggQRZF5P
      FdyRlP5102IdtZCI+XyeTCbjeYgEgYetAhN9FAV+wzxnYbOX/ycM1Wq1I54R9s6w54qiu5FI
      xCvMVavVvHXLfptM1DoSeUM3g3eiHncwgJAAgglEB4WOBSABB9IZFktF8vU6Y/E4F7a2+MSR
      43z5ykVOZAc5nkyjaBoX8ttcaDY4ksqQUnfnAPkhyzI/WFvhYCqDJsk7XiWdcstiwIh0lTZB
      RhDE1U0VgLZkS0Q1ljZdL+ErG1NY2LLYLFSJGzdUCVVVycZ1Bo4M8fZCnutrRRzH4btvLPD2
      /BYHRlI8df8kQ0mlw0cu3ikYQ7RT5MKLiLBw0wrvj23bZLNZXNdlbm7OM+wajYbnWgW67gXm
      l+ZiHW839Wmvqh0iea2XCthtRvK70nVdJx6PI0mdpVME099MBPdWocO94O+g/8PtKrnnuBiK
      ykgszlgswVa9ytXcNj97+DgLpSLfWV3CdV2OxJM8MDjCRr3Gy1vrlFynw4/sx3ylxEatwsnM
      ABWriakoZPQIpWaTVoibshuEJAz+CEITqR+aIlOqWd4xVVU5MJpgrdAAWfNiIwIbhTqFSoOp
      4ST3Hhqm1mzRaNpslWr8+8++wn/++nkWtmqh+mzQgBV59PF43EuPEMRRLBa9koIzMzOsra15
      hCg8dWLTvKCHxK/GCjemCAL6S0QGVZswlSafz3sBLU2GaPlKh4++W8DKv3TRdV0qlQq5XI7t
      7W22t7fJ5/MeM0ejUTKZzLtWaRu6MIAYQPEDN4rCOkCuXmPANJlMJHlzY42PHTrGiytLLFfK
      /PTMQeKazl9eOk8dF2ybQ7EEDw6NslWv8Wpuk5zV7MgDqrkuL64s8eTkDI5tU7NtTEUlpmkk
      dJ21nfhEN71zL7slCCGBKvVmpxRzXU5MZbiwmEfVdE/VqFsOr1/d5MGjI6iyxMxwksfvGqdQ
      aRCLaPziB47RsGy+8MJVPvPdK5xfKqH48tT9DCEEi0iqE+dEbSLHcahWq15AbFCop48AACAA
      SURBVHp6mlwu57kXRZsEE/jHQHxD/49gfr8wCKo//nF1HIf19XUsyyIei2Hm3sL45r+G7csd
      YyxcpIKho9EoqVSKdDqNYRjEYjEvECja5fcQiTbtd6HMrUaHCuTXLf2D4g3uzvFqy2IyFuet
      7S1mkikWS0U+dugof3P5PL94/BSPDI8yGI3ymQvneHr2EBNmFNdxOBhLcCiZ5moxz6V8jiOZ
      LFkjwnOL17lveBSTnY+Bi+s4uIAiydg7jlMnkCgl2uWPGIqU617wdkWxQlZ94XJyOsNb13Pc
      NZ3CceF7Z5b54H2TXFjY5uhUhlK1yX2Hp3nz6gZxU2N1q8JvfuJe5laLvHZpg+feWubVSxsc
      m0rz4NFhJOdGhqUsyyQSiQ4DWqQT+1OKhRdJJKGJBD1hNyiKElrK3e+CFuMjiE4k8gnbRDCo
      3znhOA6Dg4NEm2sor/7vUN2E5CSNAx/B8dFHKpWiUqkQiUS8rU2FcdttOalImRDM/G4SvoDy
      O7/zO/9GWOmNRsNb4wqde9+Kj/fG5jqHUhmSms5CucTpkTGeXbzOgyNjqIrKt67PcXJwmEHd
      YDad4ctXL2FLEpOJttsP1yWjG0zGE6zWKnzz+lWimsYDg8M4to2maZRaFvEd92jFaZEyIliu
      g+GbNfwzVNCY65WCqygKLhJLW2WWt8ocHk96fRSQZYm4qTO/UeHMtS0ePT5CRJP57pllHjk2
      Sq1poyoy08NJnj2zxCPHxzgzt8Xpw4OcmM5gaCrn5rdY2qzwwtsr1FswOZhA1xRv5Z1pmt4S
      yWKx6HmD/IJHRGJFVWtRCMu/fDOYlSkQdAKIVWxipxWRmi1+RE5SSm9hXv0S8tKLuEMnkXBp
      nfplWnKkY5wVRSGdTnuM6DgOuVyuIz1aMGosFiMejxOPxz017k4gftu2O1WgoBEXBtFux3EY
      Mk02a1UOZ7JcyG1zd3aQiUSSb8zPgSyRUlR+8dhJrhXyfHHuEo7fJWjbKJLESCzOeDzBK5vr
      bLWauJKEzI3B0WWZqKqR3zFWw9u0OyzfTSWybZuF9SL//jM/ZLNYw3HDnxmPqCxtlUnFDOKR
      ttqwXayTjusMp01Wtys8fmKUZFQnV26QTUb41htt2+fkVJJf+fBJzi9skyvV+cG5Zf6Xz73K
      3/7gGmvb5Y4iXYKAw6qoCWLz78PbaDSoVCrk83mPcYJCIEj8/gp4Qb+967qoroVBg+j1v0O7
      +ncQHcQ99DRICs7IfTT0doqCYJZkMkk2m/Vy8QGvLd5303UGBgYYGBggFot5a6LvBML3w5sB
      4EYgxx/ogBsfomy3+OHaChOJJJqiIMkSl3LbTCVS/GBlkawZJWVEOLu5xla9jq5plC2LoWiU
      c5sbnN3a4EBmgIiiUMfl7e1NppIpjqUyjMfibDcavLG5RlzXyex4fiKqxma9iiRBTNMhYFAG
      EYx+hiEV09E1jWtrRRY2yuQqFsNpE129YYxdWSlh6irJqL5jgkucX8hx36FBQOK1KxvcNZNh
      ZiTFn33rPP/4fUfZKtaZ3ygzPRTnpQvrVBstDk9meOr+acr1Jq9f2eCbr82zlquSieuk45Fd
      Vdn8RC/SJmRZplgsEo1GKZfLHfq6v59+41fTNEzTpFgsempHmBdHp4nxvf8BZescjJ8GIwXZ
      w9AsQmWd5swHcd0bNoeYLcSiIKH6+BdVybJMMpncVR/2ToNt250qkFh8HAZJkqjZDm9urLFU
      LmFqOsOxOIulItOJFJoss92oMZtIMZvOcGZjHUNVOZbNko2YFJoNWo7DGxurxCMRLuS2GYnG
      OZJKww6zJRSVmBHBchwuFfJoqko6YpJrNBg2o2w16kQDno/g337dtteM8fZijgOjKaaGE6Ri
      Bt94ZZ5qwyaiq9SaDvMbJe6ZzTCQNJlbLXF9rUgmEWFqKI6qyLxxdZN7Dw6SiulsFetcWsrz
      zEMzXFjMs5Kr8dqVdd539ySyLDGQiPDB+yZ576kJRrMxLi/l+fS33+b89Q2mh5PEI51RX0mS
      SKfTXpalqqqeClSv13dJeLEs0DRNT9qKupoiTTi4AEZVFMyV51Gf+z3cox9HUiOQOYAra0jL
      L4EkY48/ghrNYJomyWSyYy+14NgKt6e/UsSdSvgCtm3fMIKD+8AGPwhA1jBIRyI0bZt8o87Z
      jTWqLQvbdTg1MMSXr13mnswgI4bJg6PjnN/eYqKawMVlIp4goqocyw7y+QvnGDSj3D0wDE6n
      3ttyHQ7EkxyIJ1mslPnByhKyJDEdT9CwbWRD7jDagkzg92z0guu4JKI6h8dSzK0V+ZWnT/Lq
      pXWeO7tMrlznA/dN4dJO4TgynuD/+eoiH3/sgBdt3SzWPBXmY4/O8j9++mXed/cE7z81wu99
      +lWevHeKbDJCNhnh7fltDo4liWgyDx8b4UMPHWEzX+b5Mwv8X198g8mhBB96YIrZ4YQ3FqVS
      yfsefvsg6JMX+fCrq6u7iE6WZQYHB71aRGJsjNIc6pt/BBvncB/7LaTNC5C7irT2JtLGWzB8
      CufwRyA23FclB0m6sdPmzawFeDfhzQD1et2TLmEQ0+uZrQ0adouJeJKhaIzDmQG+NT+H5boM
      7kjpQSPCcDTGZr3G1UKOzWqVR0fHcYDzW5ucGBxkq1bjamGbQ5ksKr4ELLtFfCd6nFA1JhMJ
      ilaTS/ltWo5DyjC868U9fjiOs2duiSRJLG9VabZsDo8liegq11ZLnJzJcn2txPRwgkrdolht
      Ua7bJGMRvndmiYmBBBODCWRZ5tJygYNjKUxDQ1cV4qbBt19fxDQNNgp1FFkiEdVZ3ary6IlR
      fnhhnZmRhGdsJmImx2eGeM/JUVIxneffWuHF82tcXCowPpAgonVGcUW0OThDC8O4Uql4RChy
      ZsQWRrZtY5SvY2y8in7ly8iXvtz27qgRpOIy2HVITsH2ZYikYepxrIPPeDV4+iFmSZJu636+
      twMdM0DYNpXQ6V92HIexWBxTVVmvljmYznip0ccyA5zb2uDtrU3GY3GyssxjYxN8/tJ5dFmh
      4bR9+9v1GtPJFD935DiX8tt85sJb/NTsYUaMtuRwG4EsVNthOp5kLJag1rK4XMhzKp31rgnO
      At0iwcE+xU29bQQ7DhHVZSgV4TPfvcQzD04RMxSqFpy9tsVgyuTCYg7bcRlImpxfzHN8Mk3c
      1ChUmsQj7SF8+Ngw3z+3zB/93Vv89qceZDRr8uffvshAMkI6pqOpMlulBllkKhs5ljfLbOQr
      rG5XqDUtVrcrXFsr4LrwyPFRsvEbrtzt7e3Q7VtlWfYSz2q1mmeQBt2iRmMd5dnfRSrM42rR
      tp5/4AMgKdhT70VKjCO//B9A0UCJYM18wAtY9kvMf1+IPgiPAXqt3hJwXRddUQCJh0YnOLu5
      xpNTB/j2/BwNu8X9A0OMxuJ84/pVJhJJJuIJUkYE14WX1lawbJvxeALXBclxOJJIMXwoylfm
      LnNqcJjjA4OYyu4FDVFVZblaYSxi0nIdJFnG7bJoRARm9lKBSrUmTevGvrdXV7Y4OZ2lWLNJ
      xQwMu8Hpg2lyNYeXL6xy18wAiiKxul2hZTuMZ2PMrRa93CFZkhhORdks1BjJmrQclwcOD/PZ
      716gWrcoVpt8+aU5jk5kiEZUxrJxpocTyBJcXy+xtFmi3rT55Q+e4MBIvEPFERtbw439y0Td
      /FwuR61WY3BwsKPPsiyj1dZQ3voLuPINpFatbcxLMlTWYONtSEwgr7+B9PZf4o4+gLRxDufe
      T9FUU8R67O31DwketfmnujDj0o98o857YhMslIuc397kgzMH+JtL5/nA1Czj0RhpI8J7Jqb5
      2twlTFWj3mqxXC4xFo23A1vujXyjlKrxC0dP8p2l67x1cZ2fP3ICnADj7QTFAIZEgpx2I3+k
      n2zCIJpWO7wmSRJz6xWiEY3jkylWcnVWtmuMZU0ajQZjmSguEItoXF0p8NDRURY2S5xf2MbQ
      Va6ultgq1lnYKPHc2SUs2+G/+8PnGcvGmB5KMJSOMr9e4p88dZy6ZVOsNnnkxCTPn13gjasb
      jKSjnL22QbPlcHwqy6MnRju8bxsbGwwNDSHLN7YI2t7e9tYVmKZJIpHwZgdZltGqy6jnPgu4
      bYJv+VLc7/sXuEYS+eX/CJE00vIPQYshvfC/giThpg94aSA/DgzQ4QYV+88Gc0f8YewGsFAq
      cDyVIWUYLFVKqLKCC2iKQsWymE6leX5pnkEzyiNDI2w365SaTUqWRcuxOZIZoOnYaOxIcMfh
      QDJN3XV4cWWJyWSaSCA/pGK3SOpt/X+r2SCtG6HSX1Sh3gvzGxVcF7JJk/n1EvcdHMB1XVIx
      g1ylSbPlkIwZFKoWX/3hNaaGk9iOw2e+e5HFzRIXl/LMrxdZ3qqwmqvy2pV13n/3FL/xiXt5
      6/oW/+0n7+fUbIaNYp1fePI4n3/2Eiens3zlpTnmVvLce2iIqcEEf/yNt9jI1/hXH70X13U5
      NZPx+gNtm0ZUktjc3KRerzM4OOi5OqvVqhcLMCrzGG/+Z+St87iTDyM1ivD2XyHh4soqkuvg
      Dp3EGT2NpOpIl78CxSUor7QH5Z5fRqptYw+c6Njr7R8qI3TYAGJFmH+707COx1StnaKgKCQk
      iaRusF2vocoyGSNCw26RbzRYLpd478QUxVYLVVb40MxB/u7aFTRF4c2NNZK6wSMjYx2p15OJ
      JEfTWb45f5X7R8Y4FE96Hp+4plFpWZiSTERRaLru7lzufSCbMLiyUuC1S+s8dGyU1VyN+Y0y
      pWqTXLnBaq6C67hEdBXXhWRUI2po/PpH7iaiK/zR199mdbuMriqk4zrpmMGRyQy1ZosP3T/N
      N16d56OPzOI4LoVKg0wiwn/66ln+yVMnuLKcZ3GjzH/66pu4jstvfuI+yjWL+w8NdlSPE8Zs
      Pp/HcRxGRkZw3XYtIVHNW9d19MIVlPOfAyTc7KG2jm9bcPFLSK4DsgrxMSguIJ35M9RLX25f
      +6F/h3TmT2HldUiMQbOCtHkB9cDTuEbSS2F+N7M1bzd2pUIEN5EI5gOVWhYL5SJ3DQzhOg4D
      ZpT1WtujUmo2OJhIsVqtsFmrUrYsVqsVHhufZKlc4sHRMeaLBQqNOlXLYrFSIm4YxDUdJIly
      q8WApnMsO8gbm+us1apMJ9trPzVFpWA1iSoKMV1jvVYj7lsA3e8MICoI1Jo2f/z1cyxvVXju
      7BKbxTpjA3GOT2W57/AQjxwbJpuM4uIyNhDnyXvGGU6bxCMqtg3lmsWBsXbtm++fXebwRIaD
      oynW81VUReG5s0vEIjrnF3JYLZufOj3NqdlBvvnadVa2yvztC1ewbYd/9vRdPHhkmGfPLvP4
      iVEURfH87Y7jEI1GvbXDzWaTSqXi5fYY5evor/yfyAvPtgl/9H7c6ffhJsaRX/jfoLIOEw9B
      owh6DKleaIfyR+8FzURa+iHS2hvtogCyDq0arL+JXFwgeurj6Lretxfo7yM6ZoBgJ4Mhc3E+
      ZRjYvrC97LokdZ3haIxX1pa5f2SU1WqFf3TsLv7wzVf51PG7mCvkmUkkkR2HuwaGuJTfRpIk
      shGTmm3z7PIig9Eog2bUU7XePzLOpXKRL127woenZ9EcB2snlRfbxnZdkCRaO94rITW7bfcj
      mKJarXr1STVV4R+//xhruQoTgwnWC1XOzl3FajkUqw2mhpK8fmWDx06OsZqvMZ5te1l+cH6J
      B4+NsJGvMrda4OTMALIk8fxby3z88UN87YdzDKVM/ur5yzx2cozp4QSaKqOqMgvrJa6ttReB
      fOLxwzx+YoT1fI2xbAzXdZCkTmdEvV73FoLDjo5fnEM586ewcQb32Cdh9D5oNWD1DeSNc23J
      3yzhpmagtAyNAjgtwEVyWjD/PK6RQGoU27bV6X8J4w/gllaRzQza6F1/LwJZtwIeAwg93w+/
      J0gQVFI3KDWb4As4zcaTvLq5zmwqw5euXubh0Qku57Z5bGKKr165yBNTMyhuO6NzIhpjsVxi
      cCc94udPnOJgIsmlQo5zWxukjQinBofQkDiRzjIai/P161d5ZHwKwItqZmWZsmOT3JmeBQME
      d0uUJMlL7xB1gjY3N2lZMuBSqjb4wKlhLq5WSEc1PvDUMYqFHKqmkavLvHZlncXNMq99aZ1m
      yyYR1SlVLQxd4fpakVLN4p4DgzxyYpS/fu4y//ELr3NqdpBfffouPve9S9QaNl/8wVXOjaV5
      7q0lytU2gw6mTAZT7QSz759b4enT09ClPItgcDV3oU34pRUYOIJ76Bmk/BysvAaKDkai7ctv
      7mzCYTdBMXAf+HWk8jLupa9C5gCU12DkHtzFF+HAU7j3/jOk1ddRsgeITt23r3qef9/hMUCz
      2QytHCbUCv+MULGaXmo0tKeSA8kUV4t51iolbNehYjU5PTLG5dw2W7UaMVUjq7WzBo9ksryw
      vMgDI2N848olnpycwlBUPjAxTclq8vr6GrbrcDwzSEbTeWb2EM8tL9J0HMaiUXAcYorCQrVC
      wty9FNHfB+hM7RbluZWqzVAqyvJ2hXh8igcOx6g2WrxyeZOBpMHRwRR1p8bEYJxfe/o4F5dL
      HJlM853XF1AVmcWNEnMrBVa3K2zkq1xYzDGajfG+eyZ548o6//NfvsyH7p/m2TNLbORrLGyU
      qDVsbMfh9JERnrx3ij/95jkmBuM4joupK6FLHdXGFnJ5Bfnsn8PyK6DF2oGr6iaSkWwTdGoK
      N3O4zQwHPwTXv4c7eAI3NY305p+A22qrQa7dZh5Fa9sIsSHkx38LZ/mHyIlRouMnf6yIH3w2
      gCh1HVwUE4wHiJToB4fHOhLToprGS6vLmKrGpdw2T88e4lqxwLGBQZbLJRJGhFLLIqXrRDSN
      qK7z9tYGLcehZttENY2YrKC4MB6LMxKNc61U4GI+h6lq3DM4TN1u8frGGocyWVzHoeY4RDUN
      qUvQxu9J8TNDoVAgnYzx0oV1xgfjTA0nkHHRVJmpoTiW7fLa1U0uLuYYScc4OpFiMGlybn6b
      N69u8qn3HeWVi2uUqhYzI0n+m4/dw3DKRFVlStUmQ+kog0mT599a5sJCzqui4bouMyMJJoeS
      XF3N4+Ly+Wcv03Icnjg1gePYHc4Hxa6h/s0vI134AlJxsW3QaiaMPwSDR3EHjkEkhaToSJV1
      KFyDRgnUCCz+AEkzQTGQrBrSwvOwc7/UKEBlHfcDvwulJZTsLLHxEz92xN9hA4gtKsVKJD86
      mMB1GYiY3mQtPtZ6vcZILM7ZjXWemjnA6xtrjEZjZHbqBaV1g4bd4nKpwLHMABLw0Og437x2
      lZim07RtRvUbVZMV4HgyDWmJ6+Uyzy7NMxyLMxSN8ZW5Kzw5PcOwabJRqzG8s2jeT+TBCLb4
      X2xRFDF0too1jk1mOD+fI+HmGBoaaldrUBROH0jzx9/aIpMwaNoustui3mz78f/D377OPQfb
      vvnxgRiZmE7KbA+loqq0bJcXz6+ysF7CxcVxoGHZHBxLo6syL5xbptawsHfiHXOrBcp1i0jA
      rWUrJtJP/R/t3Hw1glS4BssvQ2EeMgeRjDTuyClcx0FaeRnnsd/GSUwi2Q2U7/6btlFrJGHt
      TdyBo7BxDgZP4K6+Did+DppllNG7iQ4f+LHQ98PQYQSLxRf+fJNgarRAy3G8m1VV5czyAiOx
      OAfTGfKNOvVWC0NpuzEfGB7hpbVlnhyfQpdlzmytE9N0srrBqaFhrhXz1FoWRbvl1QnyUn4t
      m2kzysFEkvV6jbl8jpF4jG8tXOO+oVGgc/1yGIIl86LRKBsbGzQsm8mhBN96bZ5HDiSoVCq4
      rtv2uOzk6T9+cpxvv77EdrnOW9e2+FcfvZevv3KN1VyVZx6c5bWr61xeaadVNywb14XvvblA
      vtJAVxUc10GRZR48OsL0SJJa3SK6E1STJMgmIpyczhKPqLsqI7uuSzMxi3xiFn3+2zgnf4HW
      w7+FlJ9DXX0FKX8V6eXfh3oeJh5BvvRlZEnB1WPgWEgLL+BqEUiMt20ERccdvQ+pnsfNHESb
      PI2ZnfixJX4IKYvir03pP+ZfrWSoKmWrSXpHul/Ib3tS/PHxKX7/jZc5PTrOCyuLzCTTyJLE
      eqXCxUKOqKqRNUxeXFkipmqMxeK8tLLEcDTGl65e4v6RUWKqRtpol7uWAMl10OwWw6bJqaFh
      L73i69cuMxqLY6qTDGidG7WJWSAYzxDVCNqLzGVk2oHnVDqLriletudKrs52qc5rl9cZzUZJ
      xnQW1kt8580FElGd1y61jeKF9bYtMDWcaHuCzi6TKzcYTkdp7Kg+h8bTnJgeYH69SLXRwtQ1
      jk5k+MUPHMHUFSRuLOsUKcUCruvSclycqSeJLD+P1KzRiE/TODiB6ZZRXvkDnMnHkNbPIBUX
      ITYMmVncwRNtN+jUe9qzxsAxWD+LdP6vcQ8+jX74KSKp4R9r4ocuDCAQXBAj1InRWJzSDgM4
      UntRjKmpnB4d47vz13l4bIKIqvLQ6DjntjY4mR1iIp7g2aV5npicYb1axcXlcxfOMZNKcc/w
      CLhwMJ3h9fVVjmUHKTQbNFo2Taft8pQATVYoNOtYts16rYrtuFzO5biSz/Gb9z2IFEyh6DIj
      mKaJ4zgMJE2qzRaHxlJc26hybCKJohm8ObfFd95YYCwbY3wwzvx6kVcvrlO3WjRbNrlSg8dO
      jqEoMh999CC24zCSifG5712iZTv89IOzvH5pg3rD4d5DgxyfzrJZqHFsKku+1GCzWOMTjx0B
      18bxbc0qmNayrF35TK2WTS5zmnTxLKZrYccnUc59jubp36CBgTv8KIrkYNRWUZZfQto8D80y
      rL7eXuAy9y0kp4WbPYLx8H+Nkcj+2BM/BBhAktrb4Ii9XP3H/UwgcaMs+quba1SsJu+ZnOZb
      1+d4eGSclKZRsFusVcocTmfZqFVIaDr1VovnlxYYNKO8f3KGaquF5dg4LgxGIiQUlalkijfX
      13h4dIyNWo2KZbFcKVG1LGzXRZcVDEXlrsFhdEXlUm4LRZJ2EX8/SEUNipUmRyfT/MGXz3Bt
      LcNzZ5eImzqNZouIrlKpNYloKhODMUYyMe49NMT5+W0mhxKs5ipEdIWvvjSP40Ct2eKxk+O8
      eWWDpVyJBw6PMJKNYuoqzzw8yxdeuEo6pvOxhyeRJRfHvTG2YnMSMdsGS4O7rothGNSGTmNu
      n0E7/1kad/1TGo6CJO0wu6LRiE0hHZ1GO/ZzqPPfgeG7YPU1pNISbj2H8t7f/gnx+7CLATRN
      I51Ok8vlQnNtXNdFkaR25NZu8erqCo9NTPHc4nWempxFBM0HjAjzpSLXigW2alWGozGenJrl
      zY01Hh5uJ3zV7BbD0RhnNta5VshhKCoVq4ntuvzZ22e5e2iEETPKfYPDJHZcqJIksVitkNR1
      LuS2+OD0AV7aqUO0n48qSRKKLFGuNdHVBFvFGpOD0/z3v/Qwhq7y6W9f4NEToxwcS/KX37uM
      48IH75/mL793kV/98AlkyWV2JMm/+8xLFCpNZkaSfPCBaV58e4Wl7RJj2RgPHhvh9OEhLNvl
      D754hg+enmJmwNgVqfZXiBNtgxszmJgRRJymmjmFOnTfTgr7je1CBVzXpelK2DMfaqcxpGaw
      Zj+Mlr+MMTD7E+L3IbQ0oqjzIlyj4riQUMPRGHW7xfdXFklFImzVqnz0wBFsx2G5Wma+WKRh
      txiJJRiLxTmaGWCukGO7XmOrVuWLc5eJahqFep2saTIai2OoCrqs8sTkNK5tc7VUQJYkhnY8
      PCLvXZIkis0GW7UqDw6OUGrUGYiYwW50ILiaSkCWJSzbQZElklGD4bRJ1FCY32jXuxnNxljc
      rHB5Oc/775lkbqXIyekBFBk2Ck3+5JtvY7UcDo6l+LVn7ubzz17k7fltPvzALJ98/AB2y2It
      X+Ovn7vMLz11jHTsxh7D/p1rROqDsrWF22ohjY93tLtbXr6/xg8AlgXzCzgz0zjccP96+52N
      3oeyz/r5/9AROhqS1N4Wp9ls7ooNAGiyzCtrG1wr5Hh4bJKJZJJnlxfYrFZJGgbZnbz9zVqF
      YqOBJEFKj3CtkOeZg0d4bnGeD03N0rBttht1soZBvtkkqemc3VznaDrLgZ3ockLXSSuaR8Br
      jTqrlTLvHZ/EcRwKzSbGTVQWc12XuHlj0UkqbnBufpuR9DgXF3OMD8RIRnW+f24FQ1N49MQY
      f/i1t/iXHznFK5fW+YvvXGA0E+P+wyP89MOzfPo7F3jlwirPPHyATzw6A67D5dUyr1za4Fc+
      fJKIdmO1mqZp2DslYASBK6USjT/+/7CXltDuuxd5cLCzvZ0f6MZxScIpV7DnruLk8rjVKtF/
      +3s4O4vgxR7QmqZ1lDn8CdroKg6EMRamBi2VS1zJb6PJMue2Nji7uc7BVIZBM0o6EmHEjHI4
      lSa+4yVygXO5LWaMNOVmk4lEkoVyiXEziuXYyDuqlS5JHM8McD63xYFkmtNDIzy7ssgDQ6NE
      FIXlepXtep0nJqbINxpkVQ1nZzMO2J24F+yPgLhuKNXO9Xdcl8PjabZL7c2X13JVHjw2wuJm
      hbmVAr/45DF+8PYKjxwf5TPfvcgrl9b4+fce5bmziyRjOr//hTe4ulrgpx+a5eOPzOC4Li9d
      3GR5q8rPPz6DuVNrVKQY+3OX1EoV98IFrAsXcLY2kZJJnEIReWIC5cn3IxyjIhpvGAZyy8Zd
      WsK+cIHWhQvY8wtt6W/bGJ/4OC3D8IKU4j3RaPTHLtDVD3rOh7qu79oEWZZlWq7TLlZl24zG
      4hxIZ5hOJEmqWofx7HennswMcGZ7E02WOZTO8tzidSamZgEJRVZwuLGXwPFUhivlIkNmlIeH
      RnlpY5WJRDsf/65UBtmFht0CVaPUbHIklemoGieIXeycIgxMP1zXRVUkcF2alo0ERA2VUq2F
      qsiosszcaoGxbIyhlMlffOsCtuuQjkf41z93mi+/eJWHjo3iuC5zqwWeB90/hAAAIABJREFU
      fnCGn33sAJIEn/7uHOMDMT713oPYdotSqdSxWFySJBTbhrNvIcWiSKkkzatzqPfeh7O6gnrq
      JMrgIK2/+VvUY8dwT92FtrmFffEi1vnzOJtbSMkkbm4bJ59HmZpGikVpvXkG+bFHafmElihN
      8m7W37yTIdXrdTeYQCYgqh7kcrkbN/hSJFqOw9tbm2zWq8wV8qiyzOMT7aS1fK3GRDzBcDSK
      6+wsrJEkLpcK1Futdo0fXDJGhFQkwka1yoivDLosyyxVKyDBZq3WXoU2NoHstFWh5XqNyWiM
      H6yt8PjYxK4gkiRJnt0Q2nFJ4oULm2iqwukjQ3zvzDKHx1O8fmWTTNwgHY/wpRev8OsfuZuv
      v3ydhY0Sw+koj5+a4LPfucAvf/AE5xe2+cILV/jk44f48AOTLG5Wee3yJnfNpJgdvrGLSa1W
      IxqNtnXxuTlU3cDe3EA9dQrn4iWsM2dwczn0p5/GevlllMlJWufOoR49ivXiS7j1Oq7dQj12
      DGQZdXaWxte/AYaB/tijIMs0/8t/QR4bQ/kX/zzUgzc4ONjXTiw/Tmg0Gr0ZANrGp58B4Ma0
      Ktx1kiSBLDNXKvD21iaZiMl0KkXdarFerQAuCU1nIp4gHTE5s7mOi0uuXueJyWly9TqW006F
      6IAi8/zyEgnD4GhmgJdXl3hibBLXcdhuWaR1gze31nlwaNST8n5JHwwq+WHbNq9fy7O2XeV9
      90xwZbnAA4eH+N0/fZGffniWl86vttWWlsNWsc4jx0d58OgIr11e58hEhvPX8nzl5cv82jOn
      eOjoCM+dXWZxs8I/et8hb9M9UdPfjETg+jzu6irS7AzO8HB7BlpZxT57FmdrC9e2UaenaZ2/
      gH39Ouqxo7iNBvoTTyBnszS++lWcYhFleprW+fMoMzNon/wELK9Q/YP/m8jPfhIkCfuhB3d9
      K5Hm8hMVqBONRmPvRVWaphGPxymXy96xYK6967arQM9G4xyMJ8lZTS7mttmu17h7aJipRIpK
      s8FiucSl/DZVq8VatcxYLM5bmxsMmtHdKoos89LaCg+OjGLICufz2xzOZHltc50HBoeJqxrl
      loXE7mKwAnsZfEMpkwsLOZY2ywwkDSQJ0nGDpc0ya7kK6/kaiajOb3z8XmaH45y5to1paKzn
      q3zt1Sv8ytN3cfrIMH/z/TkycZ1PPXGwnXC249fXFAV1fR13dRV5dhb34YdwALnVgoUF6p/+
      LFI8hmSauOUKdiSCPDmBffUK5j//VVqXL1P//F+hP/EE+gefovG1r2NfnUMyo+g/8xFc26H2
      53+B/vhj0GohnTrV+U12vp9/D+ifoBN7MoAkSd7O6GLrn16D6TgOKUXl4aERbEniciHHF69c
      ZDQe5+7sIMdSGSRJotBs8uW5S1wt5BmKRolrOtrAEEMRE8txeH1jlQeHRpFsG3A4mc5yuVTA
      weXt/DYns4Pkqg2adqvj3bsYs0e/DK1dJdlqte/LlRosbpa5sLjNYNLkZx45SCqmMzMUY6PQ
      4I2rWxwcS/In3zjHL3/oBA8cHubPv32Rew4Mcmom3X6/LKMqCsr167gbG8izB5AefRRnbQ1e
      +iFSvY5dKNB89jn09zyO9epruIUC8uQE1Bs4uRxu06L8b/8nsB2UiXGsF35AY3MTZWoK9fgx
      5KEh6n/4/+JWK1Cton/kGZpf+SrqQBY5kMZi+RYM/cQO2I2+nMLCLdpqtXYVz+pGaK7rIrsu
      RxMpjiXTbFtNnl9ewsXlZHaQ8WiMjx48wucuvg0uZCImZavJm5vr5Bt1JuJJtht1Rswo7KRg
      HIonWVJUzmyukzGjOLjoirrL+9OPtHN30ivYUVjiEY0rK22jt1BR+eR7DvP82RV+5mdOUrdc
      vvDCFY5NDPBHf/cW/9WHT3LPgUH+8Gtn+MTjhxlJtf3sqqLAlattb04mC6qG9eyz2MsryJk0
      yuwMruNgvfoa5j/9JVpn///2vjRIrus677tv732bGQyIAUAAJIiVi7kzBGWuNiXTlheW963i
      JJU4VbFSlcr/JJWq5F/KlT8puxKXK14oibFI2VxsyhYlUbIogqslbgAEEANiZrpnenndb38v
      P3rOxe03r3t6MFvPsL8q1Ax6fT19z71n+c53fgj17rvgvfkW1LvvRvjJJ91FPzUJVixB2jMF
      7+ybYMuD5iLXhfv91xG128ByfUaanAQcF2y5gh//jOl0etf39a4Hq8YAInzfR7VaXUE3Tnzh
      2P2kUekDeHdxAXNtEzdk86ikUnj+ow9wx569ODUxibcX5nD/9D74UYRZs4VP2ybCKEJGVbE3
      k8FkKoO65+DF8x/j5MQUFEnCiUJpxXsSvWBQDNCwQrz4g4uYKKTw+bsP4plXP0Lb9rj0eSmj
      4/j+Av7y1Y9xaLqI//vKj/D0547ihkoWr5y9iN96/BgMVYJUqwHVKrxvfRsII4SNOpimQ9o7
      DaYoYKUSpGXRKufVbwFRCKbpUI4fQzg3B+/d96DcfBPUMw92s1Ivvoxwfh7qPXeD5XIIZ690
      Zya022CpFMJaDXBchPPzyPzn/4Tw4o+BYhHBzMyK7ySfzyOdXulijjFkDCBCpEPEm2Tit8UN
      QxzucFuxApQnsWBbeKc6j4ym4uOlGoIoxL179yEMI0gA9mdzOJDLQZJkWIGP2VYT5xqzcJbT
      r9+98glundzT1/cXrzcJaV2Gpkhw3O51NUwHlhvg5n0lfHh5Eb/30yfxt2c/QSGt48uvfoCf
      f/AmKBLDuxcW8Ls/dQwsCsHmqrD+238HGIM8MwNpcgJyNguWTkGamYE8NQVmGIAswfn6X4PJ
      MqSZA9DuuxfB5Vkw04TxU0/AfeMNsH37ELxxFmG1CqgqgtkrYOkUtPvuQ7iwAO+996AcOgTn
      xxfBNA3ygQNAsYDg1UuQT5zo+ZwkkTje+QdjTQYgSRIqlQonyxF/Hkh2P+ITSHoQhpjUdDw+
      cxBN38P/O/8hpjNZ1Cyr7/vnNR15okYEPvK6Dnc5CxXvXRavJW6g5BMbMoMiS0gbKpZMF58s
      mMilVbQ6Lh657QDev1zHuSsNfHB5EY/9xAFYjgdZkvCz93VdGTCGcGoS+s98AWAM7jf+HlKl
      DPWO2yEfPoIQEULLhmRbcL72N0AYguWyCOfm4b1xFvLevQiuXu1+OM9D57/8V+iPPwbtsUfh
      //BHUI4dQ2Rb8N5+GyyTgXrXXXC+9hzkY7dA3jONyGx13bgwgi9sAqThv5N0OrcLaz4BaLaV
      qqqcY9Jutzl7UWyup6CU+orjc3PpMVlJxu/ccmqFpqe4sOMpTqga9qUyPe+TxPkR+wLosfSa
      XZVnG9mUhh9drHVZqfk0XM9HpWDgfz3/Hj5dauGh0zOYr1u448geHJ/JAMuvybk66RTYAw8g
      deI4nD//C9jPPQ9pchLSnj2QTxyH+4/fR/DpVSg33wSoKuRKBYiAcGkJYa0GaWIC6j33wP3O
      awgXqpBn9iG4dAlhrQr1zjshlcuIfB/ea99F1OnAf+Ms9P/4H+C/9TaC8xcgH7oR3vK1GIbB
      J9aPsTquixklEuOA7kKybbtncmB8FyYeTNJrAbhWTxCeE1/QSYtbxFr/DwB104ZVTOFKzUSt
      2R1c8YtnjuL/vPRDLLQ6OH14EhfnWviVh4+imOrSQ6i6yl9vWc06nJyE/qU/QPDSy/DefBMs
      k4H9J3+KqNEAJAnBhQuQDx8GS6Ug5fMILl0CkxVIuRyYqoLpOrzXXwfCAMrRm8F0Hcrx44DE
      EHzwYbcu8PhjgOMgMk1I09MIP/oI0kNnuETieNdfGzaEGkhzoBhjvF4waKHGEd/pk543iOeT
      9Ngk6kPStaR0Baoi48PLS0jrKvZP5vDKm5fww0s17J/MwQ9C/MsvnISudK+RqrtiMZClr7FR
      G60WCk/+NOSTJ2D/7z9BZJpghQJYPgd5ag+kQgHwfXjvvINwoQrtsUfBZAn21/8G6q2nEagK
      pHK5y+WJIgQffwyWz8N74yy0h85AeeB+eK98A+HiEuSDBxHMzoKl01wafYy1YUNKg3QiEOsQ
      WNmSGJ+aTkjq5RVPGNF9iadfh93pxPeI1wkyugrXDzFf7yAIQ+iagu/80ywyuorjB8r47ceO
      8cUv/iNXKoqWBWgFFzAIAiCV6vrqN94IpmnQ7r0X2ufOwD93Ht7rPwCCEGCA+8o34L3zLjL/
      /g+gPvUUlJMn4f3gDYTVKqT9M4gsC973vtfNCD1wP1zGgCBAuLAAlk5DWp7VNV7814cN/asR
      g7RWq3GOu+ja0AT0YVyT+Ov229GTMMhVWvE6iPDuhXkAwP7JHL7+vXOQJYafue8IHr5tb880
      GoIoXQgA8DxIQQB5mYKshBG8v/8HwPOgP/1LiFwHzjNfAV79FrRHH4G8Zw/sr/81ggsXwAoF
      hAsLsP7oj8FKJRiffxJhtYpwYQFRy+zSIo4fB3v0EfhRBBYE3edcvIjg/feRuv22FWJgYwyP
      Dd82SqVSj+9Ou7hpmlhcXOQy35vNSxF3aSBZJIsW8OUFE4ok4cPLdWQMFf/8yVM4sb84xMTM
      5ZOBMbDlx+bzefgvvYxgoQr9554CpiYR/sM3oZw4juDjc7Cf+TKUkydhfPHnEC4swH3tNehP
      PNHl9V+4APu55xG1TESeB+eFF8DyBUi338YZnrLZRiQxMMNAMD8P7YbHxz7/OrDhBkD5544w
      3Z0xhnw+310cvo+lpSXeEJLJZIYyBt/3V8wwW43dSHIp4nNWgi3r80TYU0rhS79wJ8pZteex
      cUNYEY+oKkATEj/4AM5bbyP1G7+GyDThvfKNLnW504Fy+hTkGw/Cf+cdOK+8AuM3fwPG6VNw
      v/JVKGfOQNozBZbLIbIs+G+/g9CpIfWzTyH48CNgcrL7XoGPqNEEKxSATgfqOM+/Lmy4AVAL
      HmWEKEWZzWZ5CyDtnI7joF6vAwAv2ffbzRqNBgzD6Lm/1WqhUCgMtQP2c5kK6e4COnXjBP7V
      F05Ck5ObaeL1Deo1YIyBZTKI/AByswn72b+C/vkn4X7r2wivXgUrFsEYoBw/xlOj2pkH0fnD
      /wnrf/xhN044cADeiy9Bf/RhhLfeCkgS9NOn4PzlMwiuXEHUal3TawqCbuq0UIB++tR4918n
      Ns0AdF3v6Sem22jnJsVjigs6nQ43BhH0xdNpQa/HGINlWVhcXES5fH0qB5Ik4d0LVRyfKeP3
      nzoNhsEuj/gZaWgdAMAwwFpNuC+8BGl6GvYzXwZLp6HecTuk6WlAVRAuVBE2mmCXPgEMHfq/
      +dfA3Bzcb34Tyhe/CP2B++F++StQC0UEpSIwNQX54EH4b5yFcuokmGkCqRSiT7uFs2BhAfrx
      42MDWCc2JXVAoztd1+W+uG3bfAcneq5oIJlMhi/wYUHTx6vVKsrl8pqLP1EU4Ym7DuLwdH7o
      xU+g3T+KIsB14PzVcwjOn+/ed+hGyEduAstnERk62J49kG67rVssBK6lUUtFaJUKnD//Cyg/
      cQeMp38J9jNfgfrYI/DLZciPPAzvO68h6nSAc+cQnjgB2bIQNRrdfgDDGHiNY6yOTTEA2vEp
      Z06NIYbwhSUJ7w4LMZBVVRUTExOYn5/H1NTalM7CMMS9RydWfVw/tiuvLcxeQVitQj6wH+o9
      90A5dQpRucQ/O2MMTJjpRTInjDFEN+yF9qV/h+CFF2H90R/DePppOC+/DOWhM/CnpqD+5Ofg
      v/kmoGlQbr0VUGSE9Qa0e6fH1d4NwKYljyVJQjqd5jIg8aquqqpQVZWfAoOQVNgSwVh3srpp
      msjlchvzAWKvH0+liv290n33InXP3Yh8H5ifh//ee4jqdTBFgbJnCvqxY1ArFTBJgqqqfKA0
      pVIty4L9hc9DvngR1p/9GbQH/xmCb78G5Z67wB7+SXjf/R78d99D6ue/CO/yLKJGA6lbT4/d
      nw3AphkAY4y7KOQC0fBmWji6rnM3aRBWqwIDXbYpNeyIz2u1WnBdF6qqQtf1nlNoWMTlImnQ
      hqp2RQAiAIquw2UM4d69kPbtgyRJkMIQmJ+H++ZbsOt1IIqgzMxAP3YLQkWBtHxK0jT29sGD
      yP3b34f13PMAIgTffx3KHbdDf+Jx2F99FvjxjxHW62B7pqBRVmiMdWFN/QBrRRR1pUBM0+Sz
      ubLZLDRNgyzLvOF+tXw73b9aurTdbsPzPBSLRf5/RVF4dqnZbPI0bRxJ1WbxPspkURAvUiEo
      IA7DEK1Wq6s7v+ziUHaLGLTupUtw3v8AYaMBhCGUfftg3HYrlOWp7KRi0XzrbdgvvAAwCdoD
      98N+9lkod96J8OoclIMHMPErvzzu8V0nhmqKXy9oxzRNE51Oh9cEFEWBJElotVo94ltJGNYA
      gG7jDaVMXddFpVLh90mSxKeuizz5YWgViqKgUCgkUg7itQbRoOl1yV8Xi3C+58H55BM477yL
      0DS7fv70NPSbb4I6OQmv1YL51WfhnT0L5ehRBLNXgChE7l/8HgonTqz6txhjMLbEAIBri6LZ
      bMK2baiqyvnqtm3D931YsT6AOGVC5BURvXoQXNflRiY+P4oiVKtVbhiDFj/dpygKMpnMpjSX
      0GcMggC+ZcG9cgXux+cQ1GqALEOamEBkWXD+9u8Q1WoAY0j9+q+i/OST4yB4nVhzR9j1goLG
      XC4Hz/O4Vk4ul0Mmk+HuQVzbR8Ras0XxxSqS8zRN44WsfvEFMVxVVd3UhUbvqygKlFwOxi23
      IDp6tPs3cRx4V6/Cfv8DSMVi1yiiCPbXnof70ENI5fObdl2fFWyJASQtMsuyeMueLMsolUqo
      1WorGruTXmc910Eu2NzcHCYnJxOp2BSgxyvPWwU6dRRFgX74MMKJCUSMITh3rnt/Po9ouR9h
      nAlaH7aMQ5uUoXEch2eFZFnG5OQk2u027ylIWvAb8YUz1lVKq1armJiYWEGzpmB9VBaXrutw
      77oThu8jnF+AcuZBdGwbxrjZfd3YMgPQNA3NZndANO26pmnyKrCYGrUsq5dvL2A9u5640yuK
      gnw+z2ULCYZhDOQkbTWIdhFGEXDvPd1xSgAQBPA8b0yFXie2JI/GGOOBLy0uCk4pdUmLU1EU
      FItFaJqWmPVJMoq1QHx+KpWCbds9bYS+74+chibVUwiUWl0tezbG6tiyRDIFn7lcDrlcDqlU
      imdzGo0GL4iRsWSz2b56NmJnVr/3GoR4h5iYUVotu7QdoNOK4Lpu4nWGYciFBda7UXxWsOWV
      FKJIkCFQ4ce27Z4vTFVVpFIpXlCKY9CXO0xenxZIsVhErVbD0tISd80GBeLbAdo8iERImbT4
      56RxsPQ5RtGYRw3b1khKVVJJklCv11cM4wCuzRdIGt0K9I8HxJRnv2Z4sUA1OTmJMAx5Fso0
      Tdx44+jN0iLqSJISdhzjKvFw2NZOanJ3JEniu5roj9OuR7udODlxEET3ZhDjNL57UnHsevhC
      mw06BTKZDFqtFgCMXKyyE7HtUgIkmAUApmlC0zS+MCVJQj6fRxAE6HQ6XIBLxKBTgO7rR2cG
      VsYL6XR6ZGdpSZIEwzC40ECSAYhiZGOsjm0/JynvDqBvNZiqsiK1gZAkeRK/vx/ITxZTrkRz
      HlWQqEBSL3UUdSXsxQkxYwzGthuAoigolUqcutDPzZEkiadH4ws0iTM0DOIktp2SNRn0GYmd
      OsZw2HYDoKJUsViEYRhot9s8KI6DGJmDfF+RMDcM+gXHOxFE2e6RbRSwUwx8K7HtBgBcc4MK
      hQLS6TRc10Wz2UxM49GJESeoiW4MzTBYWFjoMQgxm9TPXdrpDEtKhSZhJxv3ZmHbg2ARlBoF
      ugGxZVmJjfJUGKrX6yv0e6gDrV6vo9VqcSoBqVJQGpH6lcvlcs+CGbVFEk/jxq8v6Xp3uhFv
      JUbKAIBrTMwgCAamI1OpFO/Aip8UxCeqVCrwPI/TKsSMUdLPUVn8dJJRUiAIAn5yEYWbEgLb
      xVjdLRg5AwC6X3J+Fa47keiIVCdqeJIKnbgw+vm/lDYcpcIRtZESL8kwDCiKsqJxiDEGx3G4
      LDp9xlH6LKOOkTSAYXc0cpna7TbP91NqU8z/i/27IuLZo6THbDXIoElbKZVK8dRsu93mo6Yo
      5nEcp6cHmZr1x2rRw2HH/5UkSepVasbKSjD9Lt4Xfyy5R6Qgsdno59OHYQjDMDhZ0HGcnrZM
      0cgty4JlWQiWNYeiKIJlWVBVlQ/GHrtHg7ElPcGbiSiKYNs26vX6ilhAzACJBiA2pgPXjIh2
      0GKxuCELR3wfz/M4U5NcLtIGGgTbtgH0p2dQfBBFXXlJ13UBgLegJtVNxuhiy3qCNxNiJbkf
      kk4EkSYhGgUFnet1IUgJgzhO8fsAoFKprNrQstr9sizzwJhkaIDlMbCNBp/lRkp9ojGQYe7k
      DXC92PEGQPRgWlTx9sYkxB8Tp1NYlrXulkjbtnlrZ9I1D0u5WEs8pOt6jwo3nTqu6/IThwyC
      TrzP+hjVXWEAcUmVQZygpLSnmEEKwxCdTgeyLHM//HquKd7fEL++fD6/4fl6MTPmeR4ajQb/
      bL7vc4PMZDLI5XJj1wi7wADiiAe78VRokjskzhGmf61WC5IkXVd/sMhwTQLRvDdrAVI8IMsy
      3+HJuBVFgaqqCMOQq9mJp2dSoW03G8qONwDGGAqFAmq1WuIkl9WUJfpliWj+8VqDSLFjq9/1
      UqvnZi0sOmH63Uc/KWawbRue50GWZdRqNX46yLIMXdd549JuNIRdYQBEpmu32zwIFO+P9wX0
      6xOgRSm6DVSMGvbLJxdqUD1hs1sVhzUuihuAbvHN8zzYts01UMMw5L0HYhC9mwxhxxsAcO2L
      1DQNnudxvVFgcMNMv9cSH9NqtfgYUlFmUXwMFd6ArsrFILWGzd5Jk4p7gx5DtAoaa9Wvx6DT
      6XBlj7jO6U42iF1hAMC1XY8kRESVuSQOUPx2+r8I4uM0Go2eLAstehrcZ1kW3yX7yb1T4//0
      9PSm6Q6JlWGqNSTJywRBgGazyVOoZJSNRoO7fCT9TjED0D0lHMfhhEX6TJIk8Xgj6e88ytg1
      BiBCURRUKhW4rgvXdREsi0glxQTDGAH9pKprvGlHdJmS3KtOpwPTNLF3717IsrypNAVZljlB
      kIwyPkiQimQUCFPd4/Dhw5idneXFQKD3xEpy3ahSTQZHBiWi0+lcd0Zts7HjK8GDIC5ekk1P
      6jhL8mvFzIi4CFZruA+CAFeuXOmZQdDpdHDDDTdAVVWuR7pZoNMpiqKe6x7mPSmAj6JoqOA/
      Poe5X3zQzw3dbuyKSvAgiF++rusol8s8Pohzh5K+SLo9CIIVU2L6faHz8/MolUpIpVIruPxb
      gWEq44Oeu5bC2LCs01Fc/IRdbQAiRJ4PpSnb7XbPLgasDCLjizgp8BMLaRQHUKpTfL0xTXn0
      8JkxAAIVt6gYRYEsGQMZRNKu1e+IF1OthUIB7XYb7XZ7hbzKZ512QBgll+gzZwAEqh8QkYy6
      yGhiTfwkSKfTXJrQsqyebA8ZAMkrAr27PdEqKC4YxiUalQWy0aB4bFRYqrs6CF4rxOKPbds8
      nWgYRk86kbg+rVaLS5DU63U+7VEEY91Glmw2iyAIkM1mefYFAJ+OQ0ZB0ywpazIKi2QjQX/j
      Uags7/ogeK2gAFJanucbv0/83TAMyLKMer3Og+p+wWcmk8HS0hJ0XV9RRCLQ/6kPmNQd+okD
      71SIKdVRaN4fR2UJEDNBg/x+CqoHHeeMMVSrVeRyORiG0SPfEjcCojFTKvXcuXNDDRLfaaAG
      pFHA+ARYByhtmMlkeDVYvA+45uKIA/mS6hAk5UKuQTab5QNFdhsYY/xvst2n29gANgCZTAaG
      YayYeew4Ds8GLS0tIZvNAkBPJZhYoxRDUOvjevL5OwGj0rQ/Glexw0EZpUKhwCvNnufh8uXL
      KJfLALonQb1eBwCeEWo2m9wVqlQqKyQNd7Pmz6gQ6cYGsIEQfVtVVXHzzTfzoNayLExMTPRI
      M7qui8nJyRWvMyqLY7MxiJi4VRgbwCaBgmdqSE+n07xi7Louzp8/j0KhkPicpP7mMTYHYwPY
      IpBPT/z76enpxIIb/UxKxW42tnIXjr/Pdhn7aOSiPkMQ4wXqC0jKhmx1mpCKe4uLi2i32z1E
      wI0m820lOXA1jA1gG0CLPpPJ8Kn0+Xy+Z9FvlQFQZdZxHCwuLmJubo5XwAGg1Wpt+IIdJddu
      7AJtE+gkyGaz8DwPhmEgl8uh0WgA2PzWSSrIBUHAKR3NZhNHjhyBqqo9KhIkp0I0jVEpYm0E
      xgawjaA+BcuycO7cOSiKAsdxeC0gHiSvF7TTk+IFZaTCMES1WkWlUkEYhrBtG47j8IHc4gmQ
      Tqd7lLf7ZazEPop4U84wfctbhbEBbDMY64pZFYtFRFGETCYD0zSxuLiIiYmJDdttqcGfBLvE
      RViv1zExMQFZluE4DizL6uv2eJ7Xw4QlCjlJuBPIcDqdDgDwoF6WZXiex2XdtxtjAxgB0OBr
      GuFEFWPTNDdMqJca2JM4SGLbJ/GVSJQ3vmt7nscn84ivY9s2MpkMVFXlQgHUjw10eyHItRr3
      A4zRA2rMAboLlegUnU4HjDE+ACPJzYhj0MLqJwpAt9EsgnQ6zQ0g6T2SmuPJMJL6pAHwuW+k
      MjEqw8jHBjACoIHgxATVNA2maSIIAly6dAn5fB4zMzM8XUqLlnx5Eu8iAdx4WpUGjYs7Ly3S
      arXKYw1R1SKOJP89CXH/XrxeUukAuqrX+Xx+2zlBYwMYIRCVgvoAlpaWOCGOZBo1TePKz5Zl
      wfd96LrOfXPTNHtqDFEUodFo9NCqxcWsqipqtRqmp6fhum7ioO1+ChjxxyQt/n5wHGckGKFj
      AxhRkNAUae10Oh10Oh0oitKTYcnlctB1nS90cjUYYygWiz1DM8SFT4u1UChA0zTetRZX2qbH
      iz9FrHYyDNJiovfyPG/dcvTXi92T0N1FoBpBsVjkci5igBmGIZeqV3+6AAAFUUlEQVQpJJeH
      xK4URUEQBJibm0On00mUaY/r+aRSqb6KdoTVXB9xyk68L0LMZNF7k4ZqrVbDhQsX+FDAra4S
      j0+AEQVVi/fv38/9ZM/zOIWa+mpFvVJSeaPsS1z/iBD386lBZS3XRoMJKWMlKmOIv9NPVVWx
      uLiIfD7PjdhxHLRaLRSLRTSbTdi2jWKxuKVtoGMDGHEQIU6UXaFGG5qBLCpR5HI5XL58GZVK
      ZQWPZ9DuGi/CDUIUdTVIJUnCpUuXoCgKwjDkrhRN7tR1Hblcjg/zS6fTUBQFs7OzOHToEFqt
      FiYmJvjrkvtWKpXGBjBGL8gtArqLlYS34o9JpVI4dOjQwAk1SSiXy6jVatwvp+fquo5MJsNf
      n26n2IToHAQyItu2oaoqms0mstlsTyxDbZ66rqNWq6FSqfDnu667Zkn69WAsi7ILEQQBlpaW
      EjM/a11UrVYLqqpyRWjx9cR0bPw+8Xcq8Ilxx9zcHDRN4zUOERTfbJaKNmEsi7JLEQ88xdvX
      inw+j8XFRX4y0ML3PA9TU1N9YwwRVA0W/0/uXBKoqJbJZFYYnoiNIAyODWCXYiMa6imgJRdF
      3MEXFhaue9KN67qrxho0ZtayLO4yiYZEC19VVaRSqes2hrEB7EKIbZXreY1+XVskoX69SKfT
      aDabaLVa0HU90d+nQNt13Z4YQ0S9Xkcul0M6neZqemstrI3rALsUogu0WlVWxKDHks8vTom5
      XuTzeXQ6Ha6HFIdpmqjX632pEhRkE4O11Wqh2WyuuZYwNoBdClrEvu9jcXERQHcBEyEtiqIe
      I6GxsJ7n9eThxUCXfpJ04/XCdV1Uq1VkMhmefk16zNTUVF9XKQiCnp5pEi2u1WrcsIYxhLEL
      tEtBglvNZhNTU1N8jKxt2wjDkFd+aTyqoih8EJ7nefj0009x5MiRRBlH6lnoJ/c+Pz8PVVWR
      y+U4BdpxHE7L0DSN6yABXTqGbdt8sQ9DlzYMA5ZlrbiGIAiwuLiIXC7X07jTD2MD2KXQdZ03
      nczPz0PXddi2jVQqxadpivOKPc/jxDrHcZDJZPruoowx2LbddxZxoVDgLok4PISKXiJlIoq6
      0vStVqtHFY/Spv0WMLk+5PcTyKWiWslqMxnGBrBLQQtP13U+14AWbBiGvLglghakuGiTwFh3
      EDfJPsZBxkY7cHzoiPg7Y4zTIcT3y2azWFhYQKVS6ZvRIhaseH+9XkehUEisTyRhHAPsItCX
      7rpuz7Bu8afYDB9XqhYnYA7yn33fh2maPYMA49A0jdcOqAqcdL39OsQMw0CpVEKz2ez7HnHq
      hu/7/L2o/2C1OGB8AuwSRFF3pnGn0+GzgpMeE+cGJTXJrAYi4ZELkoRUKoX5+fkV84PF914N
      qqr2nEYk0eL7fiIVpNls8vGuQNdAVqNZj0+AXYIwDNFoNGCaJg+A+y26taRF4xANhrJL/ZDL
      5XD16tW+1WLRAJPYqCQSQLSOKIqQzWZRqVS4eFetVkOtVkO1WoVhGD3ZKWq+H0gCHPaDjzG6
      oF1RXGi0SGlgNt2WtNsPWiCkak0uDA0VLJfLqNfr8DwvUcKRduwDBw4MrCsA4NLy5LsTlZuy
      UtRkL07YEVmkg0D08bhxEMZkuF0AynzUarWe2WLiwhbnm62lUESs0iRXZ2lpCb7v9yhch2GI
      VqsF13VRKpWG7vm1LAudTgeyLCMMQ17djRPr1nLt9HdgjKFcLq/ICDmOA4WOyzF2HmgxUz+w
      LMu8J3ijOqs0TUOz2eyRayHkcjnuclGu33EclEqlNXORUqkUDMNAEAR9jWatn0nsk6BTRYTn
      efj/ulaBVNeKAREAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='wind-map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
