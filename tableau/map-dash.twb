<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='data' inline='true' name='federated.1q9ip551dg882h1cjei6n0do14ww' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0j51rse14htetu1h0wdll1goia0v'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (2)' inline='true' name='federated.1r9k1d40zgnkdu18z8tiu1isixkk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.09vcg6103lbfo7198wfx91gimbj5'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (3)' inline='true' name='federated.0gwwu8e03ozise1ghdi8s0w0s3zz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.01meg9102d6s0h16pvm610cnow1l'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='data (4)' inline='true' name='federated.0gvr9vo1u048ah1eqceaa031pybw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.19vgsb61iko0nl12yod2n1xn2hpg'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm_Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='string' name='Basin' ordinal='3' />
            <column datatype='string' name='Basin_1' ordinal='4' />
            <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm_Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='string' name='Basin' ordinal='3' />
            <column datatype='string' name='Basin_1' ordinal='4' />
            <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storm_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Storm_Name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Storm_Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Basin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin_1]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Basin_1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind_Speed (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind_Speed (kt)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Wind_Speed (kt)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_463AA86207664DCCB343FE29F511FFE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Basin 1' datatype='string' name='[Basin_1]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Storm Name' datatype='string' name='[Storm_Name]' role='dimension' type='nominal' />
      <column caption='Wind Speed (kt)' datatype='real' name='[Wind_Speed (kt)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_463AA86207664DCCB343FE29F511FFE9]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_463AA86207664DCCB343FE29F511FFE9'>
            <properties context=''>
              <relation connection='textscan.19vgsb61iko0nl12yod2n1xn2hpg' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Storm_Name' ordinal='0' />
                  <column datatype='string' name='Date' ordinal='1' />
                  <column datatype='real' name='Longitude' ordinal='2' />
                  <column datatype='string' name='Basin' ordinal='3' />
                  <column datatype='string' name='Basin_1' ordinal='4' />
                  <column datatype='real' name='Wind_Speed (kt)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Worksheet (jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau)' inline='true' name='federated.1wf4wfg1ajmb8t1cd07mh1rsvyl5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau' name='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Python/Downloads/jpgToxlsx-1724453495876-Screenshot_2024_08_24_at_04_08_31_Create_Maps_that_Show_a_Path_Over_Time_in_Tableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F6:no:A1:F6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>false</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Worksheet]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worksheet_3129C4C19FC942899B331CD544023247]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Worksheet' datatype='table' name='[__tableau_internal_object_id__].[Worksheet_3129C4C19FC942899B331CD544023247]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Worksheet' id='Worksheet_3129C4C19FC942899B331CD544023247'>
            <properties context=''>
              <relation connection='excel-direct.03upb8n0vy9wei10ldn2i0wt3xpf' name='Worksheet' table='[Worksheet$]' type='table'>
                <columns gridOrigin='A1:F6:no:A1:F6:0' header='no' outcome='6'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='string' name='F2' ordinal='1' />
                  <column datatype='real' name='F3' ordinal='2' />
                  <column datatype='real' name='F4' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='integer' name='F6' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data1' inline='true' name='federated.1t72dvf1ymudhb19ed18a0k2b1w8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data1' name='textscan.19pvvmn1y8n15z196det20x8yoxl'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='data1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Latitude ' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='string' name='Basin' ordinal='4' />
            <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Storm Name' ordinal='0' />
            <column datatype='string' name='Date' ordinal='1' />
            <column datatype='real' name='Latitude ' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='string' name='Basin' ordinal='4' />
            <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Storm Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Storm Name]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Storm Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude ]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Latitude </remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Basin]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Basin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Speed (kt)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wind Speed (kt)]</local-name>
            <parent-name>[data1.csv]</parent-name>
            <remote-alias>Wind Speed (kt)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[Latitude ]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data1.csv' datatype='table' name='[__tableau_internal_object_id__].[data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data1.csv' id='data1.csv_0CFFB4CE85054360A5A3447F9C8E6DF3'>
            <properties context=''>
              <relation connection='textscan.19pvvmn1y8n15z196det20x8yoxl' name='data1.csv' table='[data1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Storm Name' ordinal='0' />
                  <column datatype='string' name='Date' ordinal='1' />
                  <column datatype='real' name='Latitude ' ordinal='2' />
                  <column datatype='real' name='Longitude' ordinal='3' />
                  <column datatype='string' name='Basin' ordinal='4' />
                  <column datatype='integer' name='Wind Speed (kt)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='storms' inline='true' name='federated.0w7sszv1oa6emo12375df0gc0kdi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='storms' name='textscan.0zriyv01x1emtg1b1xesx0mzkifx'>
            <connection class='textscan' directory='C:/Users/Python/Downloads' filename='storms.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='month' ordinal='2' />
            <column datatype='integer' name='day' ordinal='3' />
            <column datatype='integer' name='hour' ordinal='4' />
            <column datatype='real' name='lat' ordinal='5' />
            <column datatype='real' name='long' ordinal='6' />
            <column datatype='string' name='status' ordinal='7' />
            <column datatype='integer' name='category' ordinal='8' />
            <column datatype='integer' name='wind' ordinal='9' />
            <column datatype='integer' name='pressure' ordinal='10' />
            <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
            <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='month' ordinal='2' />
            <column datatype='integer' name='day' ordinal='3' />
            <column datatype='integer' name='hour' ordinal='4' />
            <column datatype='real' name='lat' ordinal='5' />
            <column datatype='real' name='long' ordinal='6' />
            <column datatype='string' name='status' ordinal='7' />
            <column datatype='integer' name='category' ordinal='8' />
            <column datatype='integer' name='wind' ordinal='9' />
            <column datatype='integer' name='pressure' ordinal='10' />
            <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
            <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wind]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>wind</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tropicalstorm_force_diameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tropicalstorm_force_diameter]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>tropicalstorm_force_diameter</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hurricane_force_diameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hurricane_force_diameter]</local-name>
            <parent-name>[storms.csv]</parent-name>
            <remote-alias>hurricane_force_diameter</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[storms.csv_7967090155FA414AA590942EF916D02D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='storms.csv' datatype='table' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
      <column caption='Category' datatype='integer' name='[category]' role='measure' type='quantitative' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Hurricane Force Diameter' datatype='string' name='[hurricane_force_diameter]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Pressure' datatype='integer' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Tropicalstorm Force Diameter' datatype='string' name='[tropicalstorm_force_diameter]' role='dimension' type='nominal' />
      <column caption='Wind' datatype='integer' name='[wind]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AL022006&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AL101993&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arthur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Danny&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gustav&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ivan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nestor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL011993&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL072003&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alicia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emily&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gamma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imelda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melissa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oscar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sebastien&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AL021999&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AL092000&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ernesto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isaac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mitch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tammy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AL042000&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AL121991&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hermine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joaquin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lili&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nineteen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Two&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL031987&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AL101994&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Felix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hanna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeanne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rafael&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Three&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AL022000&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AL092001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gloria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isabel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kirk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nadine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AL071999&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alberto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eleven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frederic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Igor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Juliet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marilyn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Opal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sandy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wilma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL012000&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL081992&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Epsilon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ingrid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Otto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AL061997&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AL142003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonnie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edouard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Omar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sally&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AL022001&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AL092003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cristobal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Evelyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gonzalo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isaias&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Klaus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paulette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Teddy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL051994&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AL121999&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Five&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hortense&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lisa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rita&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vicky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AL061988&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AL141995&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dorian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hugo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joyce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lorenzo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Odette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Victor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AL062003&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al202011&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eight&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fred&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Julian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;One&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilfred&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AL072002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alex&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chantal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabrielle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ike&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matthew&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ophelia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zeta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AL031992&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AL102004&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fernand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jerry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AL022003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AL101991&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fabian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isidore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AL021992&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AL081994&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erika&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georges&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michelle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pablo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sixteen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AL061995&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AL142002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bob&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Four&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Humberto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Juan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roxanne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vince&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AL041991&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AL111999&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beryl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Debby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fifteen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL021994&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AL091994&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Claudette&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katrina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mindy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paloma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='storms.csv' id='storms.csv_7967090155FA414AA590942EF916D02D'>
            <properties context=''>
              <relation connection='textscan.0zriyv01x1emtg1b1xesx0mzkifx' name='storms.csv' table='[storms#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='integer' name='month' ordinal='2' />
                  <column datatype='integer' name='day' ordinal='3' />
                  <column datatype='integer' name='hour' ordinal='4' />
                  <column datatype='real' name='lat' ordinal='5' />
                  <column datatype='real' name='long' ordinal='6' />
                  <column datatype='string' name='status' ordinal='7' />
                  <column datatype='integer' name='category' ordinal='8' />
                  <column datatype='integer' name='wind' ordinal='9' />
                  <column datatype='integer' name='pressure' ordinal='10' />
                  <column datatype='string' name='tropicalstorm_force_diameter' ordinal='11' />
                  <column datatype='string' name='hurricane_force_diameter' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Sample - Superstore' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0ozsbj20cdelf51evvdk71kugqg0'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Python/Documents/My Tableau Repository/Datasources/2024.2/en_US-US/Sample - Superstore.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='data' name='textscan.0xciy9s16mj00a1bbgic71i9d2ja'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:\Users\Python\Downloads\data.csv' dataRefreshTime='' directory='C:/Users/Python/Downloads' filename='C:/Users/Python/AppData/Local/Temp/TableauTemp/1cnqi4b19ytls41a13nnr0impu2t/data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>81352</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_080826788EEF4C4B9E68882686613993]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Ratio' datatype='real' name='[Calculation_1368249927221915648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_080826788EEF4C4B9E68882686613993]' role='measure' type='quantitative' />
      <group name='[Top Customers by Profit]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location' />
        <drill-path name='Product' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='5' max='20' min='5' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_080826788EEF4C4B9E68882686613993'>
            <properties context=''>
              <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='cat-sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cat-sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[none:State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;British Columbia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Manitoba&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Brunswick&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Newfoundland and Labrador&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Nova Scotia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Ontario&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Prince Edward Island&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Quebec&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Saskatchewan&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State/Province:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Sample - Superstore].[none:State/Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-7518358.2595311543' min='-14901268.990629291' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6628000.7164729461' min='1691235.0435016698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State/Province (2)' id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
              <geometry column='[Sample - Superstore].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='State/Province (3)' id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[Sample - Superstore].[none:Category:nk]' />
              <size column='[Sample - Superstore].[avg:Sales:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DE4AC73E-7177-4DCA-A467-5CA1B57BD898}' />
    </worksheet>
    <worksheet name='profit-ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Profit-ration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_1368249927221915648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1368249927221915648]' derivation='User' name='[usr:Calculation_1368249927221915648:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-6991105.7584335934' min='-14247008.577808594' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6615518.8709711768' min='1763680.1762104677' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[Sample - Superstore].[usr:Calculation_1368249927221915648:qk]' />
              <lod column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='density-kernel-size' value='1.4832596778869629' />
                <encoding attr='density-color' palette='red_blue_diverging_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9D707065-3213-4488-907B-26580BED27EE}' />
    </worksheet>
    <worksheet name='region-sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Region-sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[Longitude (generated)]' field-type='quantitative' max='-7056042.5213395711' min='-14291257.808480997' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Sample - Superstore].[Latitude (generated)]' field-type='quantitative' max='6515519.3680313854' min='1677513.9028340569' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[Latitude (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='State/Province' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[Sample - Superstore].[none:Region:nk]' />
              <size column='[Sample - Superstore].[avg:Sales:qk]' />
              <lod column='[Sample - Superstore].[none:Product ID:nk]' />
              <path column='[Sample - Superstore].[none:State/Province:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[Sample - Superstore].[Latitude (generated)]</rows>
        <cols>[Sample - Superstore].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{48979531-0B00-4797-A2C4-62CB22AC2C2C}' />
    </worksheet>
    <worksheet name='wind-map'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Wind-map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='storms' name='federated.0w7sszv1oa6emo12375df0gc0kdi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w7sszv1oa6emo12375df0gc0kdi'>
            <_.fcp.ObjectModelTableType.false...column caption='storms.csv' datatype='integer' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='storms.csv' datatype='table' name='[__tableau_internal_object_id__].[storms.csv_7967090155FA414AA590942EF916D02D]' role='measure' type='quantitative' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL031987&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL031992&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL041991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL042000&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL051994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061988&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061995&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL061997&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL062003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL071999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL072002&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL072003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL081992&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL081994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL091994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092000&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092001&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL092003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101993&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL101994&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL102004&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL111999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL121991&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL121999&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL141995&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL142002&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;AL142003&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Al202011&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]' included-values='in-range'>
            <min>1987</min>
            <max>2011</max>
          </filter>
          <slices>
            <column>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</column>
            <column>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:long:qk]' field-type='quantitative' max='-2040417.8586464114' min='-12090680.628582735' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:lat:qk]' field-type='quantitative' max='5648639.1669099322' min='-1071717.3501981888' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' />
              <size column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' />
              <lod column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' />
              <path column='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:day:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:lat:qk]</rows>
        <cols>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{401C9CBE-A6AA-4116-90B7-C6FD86252C0A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='map-dash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000' />
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33250' id='16' name='profit-ratio' w='33300' x='45800' y='63250' />
        <zone h='33250' id='3' name='wind-map' w='33300' x='3300' y='4125' />
        <zone h='33250' id='10' name='region-sales' w='33300' x='44500' y='4250' />
        <zone h='17000' id='8' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type-v2='color' w='11700' x='54000' y='38875' />
        <zone h='10750' id='9' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type-v2='size' w='10700' x='25400' y='25750' />
        <zone h='17250' id='12' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type-v2='color' w='8800' x='68700' y='38875' />
        <zone h='17625' id='11' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type-v2='size' w='10000' x='44300' y='38375' />
        <zone h='33250' id='13' name='cat-sales' w='33300' x='2400' y='62125' />
        <zone h='9750' id='15' name='cat-sales' pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type-v2='color' w='14000' x='46800' y='85750' />
        <zone h='9500' id='14' name='cat-sales' pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type-v2='color' w='14000' x='64000' y='86000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='266' h='33250' id='3' is-fixed='true' name='wind-map' w='33300' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17000' id='8' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type-v2='color' w='11700' x='54000' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='9' name='wind-map' pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type-v2='size' w='10700' x='25400' y='25750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='10' is-fixed='true' name='region-sales' w='33300' x='44500' y='4250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17250' id='12' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type-v2='color' w='8800' x='68700' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17625' id='11' name='region-sales' pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type-v2='size' w='10000' x='44300' y='38375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='13' is-fixed='true' name='cat-sales' w='33300' x='2400' y='62125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9750' id='15' name='cat-sales' pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type-v2='color' w='14000' x='46800' y='85750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='14' name='cat-sales' pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type-v2='color' w='14000' x='64000' y='86000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='16' is-fixed='true' name='profit-ratio' w='33300' x='45800' y='63250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{176FFAC6-2D75-4970-826F-80DDE2F66E64}' />
    </dashboard>
  </dashboards>
  <windows source-height='177'>
    <window class='worksheet' name='wind-map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0w7sszv1oa6emo12375df0gc0kdi].[__tableau_internal_object_id__].[cnt:storms.csv_7967090155FA414AA590942EF916D02D:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[avg:wind:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:day:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:hurricane_force_diameter:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:month:qk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:tropicalstorm_force_diameter:nk]</field>
            <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A683AC58-330D-4B48-B338-B086EEB06A90}' />
    </window>
    <window class='worksheet' name='region-sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Sample - Superstore].[avg:Sales:qk]' type='size' />
            <card pane-specification-id='2' param='[Sample - Superstore].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Postal Code:ok]</field>
            <field>[Sample - Superstore].[none:Product ID:nk]</field>
            <field>[Sample - Superstore].[none:Product Name:nk]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:Row ID:ok]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{856BB8FD-752D-4626-9BB0-36233C173E67}' />
    </window>
    <window class='worksheet' name='cat-sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='5' param='[Sample - Superstore].[avg:Sales:qk]' type='size' />
            <card pane-specification-id='5' param='[Sample - Superstore].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:Region:nk]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34F32BBB-2C2D-4EC2-9AA8-A70C8AD57C01}' />
    </window>
    <window class='worksheet' name='profit-ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Category:nk]</field>
            <field>[Sample - Superstore].[none:City:nk]</field>
            <field>[Sample - Superstore].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CE52C81-563E-4EB6-A05B-47A3A376128B}' />
    </window>
    <window class='dashboard' maximized='true' name='map-dash'>
      <viewpoints>
        <viewpoint name='cat-sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Sample - Superstore].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='profit-ratio'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='region-sales'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[Sample - Superstore].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='wind-map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0w7sszv1oa6emo12375df0gc0kdi].[none:name:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{D1307A85-E9BA-4D6F-8CA8-7F03A9CF34EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='cat-sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map-dash' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='profit-ratio' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2995fkyJUe+kXAA2krq6rNTI8hOUNyh1yJolbS6mj10/vf33lHWq3R+uWQ
      Y3u6u7rSw5t4P6BuVCASyMyqLtud3zl1KhMJEwDujbj+slevXglcQAiBqqqgQoj6Z8YYGGNy
      u/qZ9lHheR5M00QcxwCAsiwb+9q2Dc/zUFUV0jRFnucb12u7lg7av6oqcM4797NtG5ZlIYqi
      reNmjME0TQRBsPW6+yDLMnk9x3Hguu7Oc2ZZhqqqYJomTNPc+H3XfQJAFEXIsgyMMbkvYwy9
      Xg9Afd9pmsK27Z3numlEUYSiKPZ6tnmewzAMOUbTNGFZVutzuS5MoH44KuEJIWCa5taB0nYh
      RON4QhzHGI/HODo6QpZlWC6Xcn/TNNHr9VAUBZIkkcTPOW+cZxcTCCHkw9E/68jzXF6Hxtt2
      TsMwEAQBHMd5ZwZgjKEoCnDO0e/3G8QmhEAcxyiKAv1+H4wxRFGEJEkA1IxgmiYcxwHnHJxz
      +ax839/KTLZtI4oipGnauM+yLOF5HhhjcBxHjvEuwTnHarXaychE/CqxCyHgOM7NMoA+41ZV
      BSGEfHG0rYsY24ifsFqtMB6P4bouACBJEnDO4bouOOdyNgDqB2PbtiQAIYR8eduuoY5n136E
      rn2IMG6C+AHAsiyMRqPGGFXQ8yDQKkkoigJFUWxMCmEYQgghibntPoIggO/7EEIgz3NkWYYs
      y+B5Xud47gKmacL3fSRJgrIsW8eR57lciVUQXd44A6hMwDmXYhAxA2MMhmHIbSqhdRETzeY0
      YNd14bquJPg4jhvnohnJcRykabpx4zS+d8EuBjEMo5Oornu9Xb9bliX363qx+v3TaiGEgO/7
      W1dpYmrbtiWDEeHdtfhDYzIMA2VZtr7XLuIn6CL6u2LjKl2yPj08xlhjEKoopKLX6zVejip2
      xHEsdQP1PGVZNohfF7O2oU1/2QfqeW3blox+22CMYTgcNrY5joMkSeQkoe+vrtJALU8zxuD7
      /l7XI6JK0xSGYchJ565hmiY8z5MrGeccjDFkWQbO+dYZ/qbHbNLDbCMw+k2XXQ3DkLM3KSl5
      nkvljQaqc/Z6vUZVVfIFq6tPkiQbTEQPZ9dqo4+9iyl3zf69Xu9ORQN9BtYJXDc0XFXU64Lr
      ujc+k14FjDG4rossy6Relue5JP6uFV+fnG8CktW2EYs+45dlKRUzugH6zbZtBEEgZ1I6T1EU
      0sLRtcpsI/Btv6nnVHUHVYfpAu2riiL3BSFEQw/YZhCg71mWwTAMWJbV2G/bvdC7u09wztHr
      9bBarZAkCUzTlJOd+k5V+L5/4+M2VTm9KAo5o+sEp8v9ZVlKHYF+By6tF7RKkFijzmr6jekW
      KP03fXu/30eapg1RQV1N1ONUnaYLQgjYtr37ad0ihBDIsmxDEVahi0F0b2EYAoAUayzLujNR
      7l1gGAZc15UiGRlC1us1gE1a2fZsrgsTqK0VVVXJ/132cQAbRKb+ThYHMnl2oY2ody3pxJQk
      69u23VCY2ojctm2piO86933Jwyps25YTkQqdENpEJJpsgJuXk28LtPJOJhNJD0SHWZZt6H63
      wdScLqASWJfNfRv0GXgXtjFZ23f1/OTooe9kK9fhOM5O4gew1ZJyVyAib1MA1clnm84G1Aom
      /bZer1ufsxACYRgiy7KbGv61oTq3LMuCbdsYDAbo9XqNd06/3TS4/iAty5KKLsmKuoOpi0H0
      FeEqRNVlz9ZlWrIYqLoHsDk70Jj3kRkfirhAOpS+jUDPWF0J6Y+2qR73LuuQEALT6fTe9YA2
      kGFFFbfpXm9jkjJ1RwvZZ7vkLXUwXbrCLuirzD7u/W1I0xRlWcIwDHlex3Ewn883GKUN9z37
      qyBlvGvmbvusQp0wuu6LrC9RFEkv9EOD7/swTVMaTsiBd9MwdVczzbCq3V8HWYH02UndX18N
      yI0/Go0ayzjtF8exdEJdx8THOW8wALnR93m5D4UASBG+zv3TM03TFP1+f+s1wjCEZVlIkuTO
      Tb/7giIGbjtkw9RNhfpS02aK22a2VB1e6jnSNMV4PMZ0OkUYhtIWvFqtZMxLWZaYTqf46quv
      ZOyOurzvu7oAlx7Frt/V+7hPm7iKqqo2HIQq9MlBvT+yCJEdvetZqQaIPM8Rx/GD0IG6cNvj
      Mq+i8Op29i60mTkty8JisQBQe4lJQe33+7AsS7rnh8MhDMNoxAgBaDACXb/Nl9AG9Zg2Peah
      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
    </thumbnail>
    <thumbnail height='192' name='region-sales' width='192'>
      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
      efj/ulaBVNeKAREAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='wind-map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WbAk2Xke9p3cM2u/W2/T28xgBpgNOwcDcgBaJC3RsERTIGXaBilvYclh
      PTr8xJDtF/vFYTssWVZIjrAeTIUo20GYDMgWQYsACRIEwcFgmRlgtt5v9/S9t/bKffND9X/u
      qVOZtdyl+07f+iJmuruWzKzM/z/nX7+f3b17N2eM4SAo+l6e5wAAwzBgGAZGo9GBj91oNArP
      AQBJkiAMQziOU/oZ8bNZlsEwjJmf830fURTx8zPGYJomdF2H53nIsgwAYJrm3GMtgyAIEIYh
      FEVZ+rvVanXu7z/NyPMcQRAgCAIum4wxxHGMLMug0Qv0J32I/lQUBbqugzGGJEmQJMnE58Wb
      n2UZP4aqqjBNE57n8WMtAkVRwBiDruswTbP04RqGwYU/yzIkSYI0TWFZ1tR3SFjnCYphGBgO
      h/zm0G+2LAuNRgNxHCOKIhiGAdM0F/5N86BpGtI0RZZlSykBXcdKAYoRhiFGoxHSNJ14nTEG
      VVXh+/5YAQzDAGOMr36EPM/hOA4Mw0AQBNB1HUmSIM/zqZsuC7nv+8jzfCnhJ8FvNBr837M+
      S+d1XZdfn2VZhZ+l1XveMW3bRrVaRRAEcF0XeZ5jNBqhVqvBsizouj51Qw8LRVFQrVYxHA5L
      P5PnOX8+hmGgWq3y57bCNOI4hu/7SNN0aoEXF3cNGG/B1WoV9XodURRx4bVtG4ZhYDAYII5j
      fgBxpyiCoihIkmRKoeZBUZSFTBoZaZpCVdUJcyDLMqRpygW21+sBGAuPruvQNA1hGCJNU1Sr
      Vb7y6roOALBtm2+fWZZhOByiVqtB07SllHoRkOLrus7vswgSfl3X+XUWLUIfZtCioqrqoY6T
      5zniOMZwOOTWCv0nC3+apmMFAADXddFsNrkwKIoCTdMwGo0Qx/HUSeZBPOkioFVwWdu6zFcg
      4SaBph0gCAKu4HSNWZZNHYMxhkqlAsdxEMcxwjDkC4WmaThqkL9BvoC4w8nC/zhiWfNv1nH6
      /T7CMOTPnl4niM+eP8l6vc5vcqVSQZqmcF13YuUvEuaylSjP84mTzgP5DAdB0fl1XeerCSl0
      2fXEcYx+v496vT71EBhjfNcAwE1A8eYeFWhnEk2sMuF/nFZ/AEd2P8l/6/f7iOMYtm0jiiKo
      qgrGGCzLQq/XQ6VSAQAoJHi2bUNVVW5Tj0Yj7jnP2m7pfVlBRI97kYdVq9WO9KFqmjaxm5AC
      lO1IdOPKQL9DVdVjW4lp8aEFhxzuop30OHahxwH0bKrVKg8QKIqC9fV1HsRRFIXfW422ejHq
      4Xkedx4WMWNmvU/KM2sFJnPrOEFmnHitssnjeR5UVeUrcZGgkxIcF8jB7XQ60HWdK61oFom7
      2wqToOdsWdZERDDLMmxsbAAYK0eapgiCAFqSJOj1etwpKFrF5b+LKFKQon/PWt2LQpdHCQrL
      JknCX5PPR8pPQYBarXakoc5loOs6arUadF1HFEUTMWy61tMICnbMQtG9Kdr5VVUd+x1kq5Nt
      K2OW4M9KhC36OjCOuBwnyMGUXysTKtHGL4pkDQaDpfybZUEBAdM0Ua1W0Wq1oCgKv96iUO/j
      jjRNF4oqLmOeWpYFTdYOMfogglbRoni6/FlaTU8KGGMTJpb4G2l3kq83TVOeBBSR5zkGgwF3
      oo4bZHI5jsNDso9zNKgMiqIspPi6rsMwjIlwcpGVkqYpPM+DRo4vfaDX6/FEkKZpPGNmmiYG
      gwEMw0ClUlnoIZDdehK2bDGyMs9kEyFfexAEUBQFQRAcKGdxEFD0wjTNxy7+vygW/c2UBxAr
      GsTdmo5DeR1FfEMsK6Awkud56Pf7GA6HME0TURQhDENomsZLJOhE4knlvxf9J573OEEJLfk1
      EWLCBMBU7oNAdUUUKHhYoEAChfNOCw6SdKTdvih0Tws33UtNFMQ8z3lCaGtri4fgWq0Wf9+y
      LKiqWmiPyVEV8UcUbUMP40FSKYMo0GW+i6gEURTBtu2pWiff95EkCVRVheu6vGxjhaNHnucI
      w3Apn0fTNNTrdbTbbX4Mgq7rcBwHnU4HYRiOP09v0jZBKwxpEWMM1WoV3W4XqqryXIGMeSt5
      kRLQ3/v9PlRV5dv8UUN08Oddo/iddruNZrMJVVWRpin6/T6vj/I8j9+bVUjyaEFlLMByTi2B
      /DnR9DEMA81mE4qiYGtri8uBJju98r/zPEe/359wvkRzSfz3PJTZ3nEc80TUURd4McZQq9WQ
      ZRmiKJp7bLomegC9Xg+WZSEIgolKWPKPqCR7hcOBVnuqIHZdF8C4QmFZmKaJSqXCiwtJ+Gmh
      0jSNL/BaWQZXhpwUE50xWagoeiLnFYogKl4URcfi5GmahkajgW63u1D4Unag5AI18Rp934eq
      qqvKzEMiTVOkaYokSbi5Wq1WDxTypeSuruvI8xyGYUzsJBRU8DxvnAcogrz1iA99ngNr2/ZE
      3HoeRCUscz4PC03TUKvVFr6WMjNP/JN6EEaj0ZFXiJ42ZFkGTdMmmpLyPIfneRiNRkuH1Sn3
      Y1kWl2VxMaPcU2n9QdFKKZaSzoKqqlNRF7qoeYkyMjPiOOYlwke1ss6y1cuEvuyz9MDo76c1
      Pn9U0DSNZ70JZAYBh0uW0jOiKmCSK13XyxWg7EBlPoMI2s7KokKzjj8ajSaUz7ZtaJoGx3EO
      LWCUlzjIai2HbsUK0yzLeGh4hYNBURTeakoRGsJhCxDDMEQcx7ycHRg/Q8dxsNRRi0weWZgM
      w+BCIX9uEcGTvzccDtHv9zEYDJYS3DzPuSISyhRgmdW/7Dsr+//woECFjEVM11kQ80BRFE00
      3ygHfXBij4AoCNSKdhSgXURRFPi+z1sUFwW1xInHK7Pxl11h8jyfsEvnlVOvMB9UDi6CSAkO
      s8DI/oNYbq7QC8uGMcXEkfyZg5oZIkhYRcEcDofodDpwXXehLKxt27yWJ89zDIdD/j1ZEZbd
      XeSMbBAES+9SK0yC6tLE6uAwDNFutw8VHBGDF7VaDWmaYjgcjqNAy2oWrXLHVcpADgsJv7xa
      R1GEwWDAs3nEplBkkpCQkm9R5JjTOecJbtEqIm/XYRgiDMMDmVSnGWJ0Ro7c0PuHWVw0TeNy
      2u12OaWOZVnTeYB5Nj69JppARc7uYbcs0aGk84g3JUkSdDqdifKFWq02ES0gM8XzvEKzrCz5
      B4Bnf4H9/mJRKVVVLXR6KavdaDS4Aq78g3IkSYK9vT3uoFJHXJZlvPqY/LmD5ojCMMRwOITj
      OKjX6zyowvsBRJDNTQ+Ooh2ioBUJzqz4+TKg8GdZvU7Ra5Q6l1fpKIrQ6XSmGkpmgaIDlUqF
      J2GouZ4SK2JBFTn8Yjg0jmO022202+0TVRZ+kkCykiQJ7t+/D9M0+cqs6zrW1tZ4DRp9Xo4Q
      Lop6vY5qtYokSWCaJi/p0XV9shqUwk2isMv/llc0+d+yTb2MxorCLx73oKsobX1l/op8zQRV
      VXl5BmUSqTHdtm3U63W0Wq2pXUo+Zlnd1Apjn2k4HML3fdi2jb29Pd6ZKC66Yl+37/sHZhqk
      tlsynSnpxpnhZIEry+QWmUtlr8nHtCyLmxMyqMJylnLNg2ySUUlGEARzQ7ji36k3mEK6Yk6D
      SjyoPU9e4WllIRqVJElQr9dXDG4SKDEF7Nf7iNxOdK+oEQgAb2ZfJulIz4eOR6XstPtowHTP
      rmzHi6bQrBIBOpZIkUgwTZMTb3U6namLpOMfBcTfI9aGi+/NWplFoaffTgpK2cRZoJomYN9X
      qdfr3L5dYbK2TF40gf0oYBEtTxiGMzPDVE/Eu740bYIUQVy0+B5e5NCK74kXXvRjxGPQ38nZ
      IK3NsowzLtBFyMK/rKMjno/CW5qm8Vr+Ij4d0Twr8oHEYxqGMQ6XPVB+WaHk307KL++Ox1Xj
      9GEF8fWIWV96hsSN1Ov1ChcbsdJAfL70fWIydF13bgmFIj+oRZ3PIgdZfA8YCze1VoqRFLHm
      X47uFNnS8r/FUKyodL7vT/EBLUu4JDvyFC6TaV3IvBF/c9FCQO+tfIFJFGV9RYGWycDE++v7
      PjqdTqE/0O/3ef/HYDCY25ariHwzdKIyFDnBs96nLYwEZzAYIE3TCQEtEgyxUV/MC4goC9/S
      ak1CJ9MMltn98nHF6A6wH/EhoafXaTUS8xEUkaL2ScbYQ22fPOmgiI5sIpP9n+f5VMvpLMuD
      QJaG6H+WBXHoP40iL/NY0couQv4caa2Ycc2yjPNe9vt9VCoVbgYVCWeZcy2bWEXnj+MY3W4X
      a2tryPOcJ6ZmoWj3K4psGYbBbUjTNCfMNvmm02vELlGtVg8cx34cQfdU0zRUKpWJIEEQBIU1
      QbJvJ5ZNiEqVZRnu3LmD9fV17Ozs8M+4rssJHaj5RqNIRlFSZxFK8TKIdj3R0BmGwYmnLMua
      2sJkRZNX66LXRdDrQRDwPuBFV94iX4BeF88t+wji58Xdj0KmdA/iOH5kRFsnDYyNCY0pkibL
      F1WFRlE0RQxGO6q4y6dpitu3byMMQyRJgkqlwplNqPmdGmQsy4LrujBNc8z2TQcTIzezwoWL
      /DgAExEjMoUoLj/re4u+Ni9ES+RVIp35vHOLu0xZtKjsXsi7x/r6Onfm2u32kfY1PA5gjJWW
      jzPGeJ5AfAbUz0HPNUkSDAYDdLvdiSjb/fv3Yds2r/uhYxKBgbgQ8Z7gIn72gzpvJDwilV2e
      j4ucRNNgESwqNLPs+XlRLPH7ZSt8mRIV/VtMklH28mFxCD0OCMMQruuCMYZmswlgv1pXdobJ
      p2y325xBb21tDd1udyLsXHTv4zjeD4OSKURJhqIvLJOAoB1AtJN93+dOSllhWhEorDlrgkoZ
      RMEt2uHKwr/0eTIDbdueuKEia4F4DGqWpwUgCALuO6x8gPmgxXFtbQ1AeTKUAhKMMT7IZXd3
      l4/WIsxa8Lrd7j4vEL0oQhSCMrt33o8RPy87vfTnvJ3mKIZDzPMbRGWVz0VcM2IOIE1T+L4P
      Xde5YhRFJcj8G41GE1WJZYvMaQdjrJBlgxJixMQxHA652U7f29jYwGg0Qq/Xm1jw6H35PNVq
      FezWrVu57GCInEAkxOQoi/HwWSFRYL+8QYyQECgn0Ol0sLGxMbNflwSGVl3x/LMUp4hNWL6O
      Ito88U/qKaDKRErUkA1KVCvytEZaYcRED70vctSssBgosEGM2bOilnk+nnERRREURUGtViuU
      rzzPx/TocRxPrH5iGQCwLzRF2UxZmESBB/YzoOLnRMVotVoYDAawbRtJkhT2/uZ5znuDKTIg
      UpXMckzFz8jCL35PdtpJqGnFEadd0mpDHPRFN9b3/aneVnGhkTPGK0yCqmophE4m5SK+Iz07
      eg6zeFw14kwRV31gP4xJ/55XhsoY47uEKGxFD5oiQhSzpYI1y7Kwt7fHw4c0vcayLPi+j2az
      iUajgSiKOPUdnXtedEa054tuhPx9Ks+Vx2wyNq5QnNcAP6v0gRq0HxbD9IcRYg/HQSpAyXIJ
      w3AmfeVELZCc2FnEPpdPKNtcZdu8fFxyXDY3N7nwUBkDjbjp9/sAwBWBVmbZ3hPPUXad9L5o
      5hHIiRVXcU3TYFkWN4lmmS/UF10UTmaM8e+vnOJyWJaFOI6nyk0WjUqKu7nv+zwvQ69R5p5t
      b2/n9A+xf/Yg1OZiQm2W6SGmq+UWS/qzUqnwoXW0HVIpMoW4VFVFp9MpDGHSjkRNLPKNka+R
      oCgKDMPg9jsRaomx6LW1tZnTLOVqUro3pKzA2D8Rm25WmAZZCEEQwPM8AOMQ6WAwQLPZ5IWU
      cRxzhcmyjI+4JSuBBopTcZ1hGNy60IB9+5fS9nRy8c9llUEWuqLVUIQccqScAc18ZYzxsUFb
      W1sYDoe88pOcnSJPv6g0u+gaRFOJYveVSoXX9IgJNXowRZWI1FRU5McYhgHbtuF5Hp/+uEI5
      KOpj2zYvQyf/qdPpwDRNDIdD2LaNnZ0dbG1todvt4syZMwjDcIJaMc9z7giL/ilPhFEPrLj6
      H+bCizKoopDJJhe9Tm1xZAaJW2AURahWq4iiiFf8EYOzeG4CdXbN4tQvcow9z+NTK+UdimL7
      FA2i82TZeJg29QLLoCkvwHh3k/kqVyiHoowHqFMJw8bGBrcKWq0WLMviLY/03IIg4Du367o8
      chcEAc8xxHE8mQegKM4ikB1KxhgnHZplj4tOdZEjKYZdRaGj9waDATRN48VorVYLnufh/Pnz
      PDxG86QopCuaJEVhUTGZVRQ3lq+VEnqUPGRsPGGSBmrLcwXk4wFYeiD4aQeZNRSNo+cGgPtV
      VG5CxYqdTodbEoPBAJubmxM5Bl3Xx2FQcaA02c0yyhIK4so+KzoirrSyjUyCR83n4jnE76Vp
      io2NDS48QRDwoQc02ok4ZYgGhW4UdQXJOQxxRBTdKLGJQhwRRfeIWvOiKOKrSp7nqNVqK5v+
      mCD6a0U+nSiHtNuKESDameXnPyGt5DCKO4FIcyibCrKgLuqhi0kt8fuiRsvnA8Ar+igm7Lou
      kiSBYRjY2tridiF9VozD0ypO1+m6LrfjRQUUp8ID+431qqry7ZVqUOI45pWu4mDmFY4HYkWC
      GJaX/VU5wEJy1W63eXhdURQ0Gg1oJPTiCi8STYVhyAdMyFGTIiewLLRXtoOIr9HKSkIuazUN
      iaNIACmR2LSuKApc1+XUF2L5BR2z3++j0WhwZSczSZ4kQ987c+YMD10OBgOudJVKBY7jTDlX
      KxwPxAYjWT5kJQCKw9xEskUBDk1cucU4tXxwebWn1+UM6mFAIUgyLcTX6eJVVZ1KTokNPTI3
      qRiVURSFl87KER0Ks5LvQCl0scVyOBxyE5HS66vxSA8H9JyAScGm9wiiwJumiX6/j7Nnz8Jx
      HFSrVfR6PTiOw8OiPAwqrvDiSRa5sEU/K35GHGVZhDiOueDR8WkKS9F1UoxXZBEggQb2qwfX
      19cLB1rQcRRFQb1e58MAxXNZloU0TdHZ28NXf/uf4YnLl/Hzf+UXV7ToBwQJKi1YtEgV5ZJk
      yn3Rn8zznNepieUSrVZrwnSlzDs9/1qtNo4CFQnVQUAmRFkUiOgERa+97MbIY4mA/V4FmXKQ
      bH05H6AoCi+hIHOIbrb4GfFaHccpnUWg6zqq1Sr+z9/633H9/fdw/dr7+MznPoeNjc2l79UK
      4Dkekht5JRef5Wg04s9S9CFJ+NfW1vhCToM1qtXqVKhdJl7TxDdlm34Rk0a0mefVyBATADmx
      8xJBURRNrML0naI8BRX1MTYm4MqyDKPRiBezidcrfpenxB9ck8hMLIMxhvbeHm7dvAEAaLZa
      qFYPx11/2iGTDBBo1SfYts2HtdP7nudhfX2dZ4RpkZUH65HfSGRn1J8OSEPyigreKDIySxnK
      HF/xPcrEkUCTCVTmFBO7mqhQdJwipmbXdXHmzBleaCZ2uMkRJzErSCsIXccspczzHD/6/utI
      H5z/lVe/sOrzPQQ0TeOdXxSOFhcg2e5XFAXNZpPLYq1W41yi8+C6LjeFqI6s3+9Pj0gSY/Gy
      k7sMaEUWiaq63S7fwlzX5SS0RSgyzQaDwUQzPVWVapqGZrOJKIpQr9en+knlY1GyhARfrEyl
      ladoJ4uiCD/6/usAgHqjgY9/8lOryM8hwBhDvV7nTIHEIeV5Hhd02plFS0C2Omjs0SyIo1EZ
      G9OwO44zjgLJ8X0xByCu1rNWbBIq0liK1pCQep4H0zTR7XZ5LFbcceTGFAo1iuek6yDBzbJs
      wlEGwIdZk/KK/ohoD1LI1jAMNBoNziNaVp6Q5znu3LqJvQc0G5/6qZdRWeDGrzAbuq5zhghK
      LqZpypWC2N3ouYg9wlSdu0gQgjLCBG6yyx+UtUzcXoqqK+k7dED6d5qm3AunCxYjTZRIKhso
      UVYuXOasiwk7WVmLjqHrOmzb5nH8WYwVdPzvv/YaAMB2HHzm5c+tanmOAPSskiThgk6JRurE
      E/06kqFms7lwMSFZBJZlTfkHUwpAF1TkDyzjGCdJwk9KJpXIjSOaGfIPkSdMyscGysO0RT4C
      QRRY8m0WLV3wPA8/efMNAMDHP/VpNIQCvBUODrFvmuaBra+vT1QjyPJYrVZLy3WKZGIWTX2h
      Aiw7hKAoy0sX73kebNvG7u4uarUaZ3ZIkgQXLlwonA5PO0hRVEr8IeK/RcWl6xd3F7EJhUyn
      RVfwPM/x7k9+DPdBT+pPff6nV6v/EUDMBZFPSCgri6HaLwLlEWaR4NKxipKWx5bBIVvdtm0E
      QYBGowHbtvkWRoJPTS5ytEdVVV5nIws5KQyt9KThIm+/6DyJ0yGp93iZZpQ0TfHD178HAHju
      xZewsbk5letYOcPLQ1z8RKpJQpGpLYMxVlh9K4LC20XPeyEFKEo7z3vgjI0JosjRlH0LUYvL
      usJmQRR0scqThlrQcajTjZxmsbpz0VW822nj+vvvgzGGV77wRe7Ad7f3EPZ8rD9zdhUOPQCK
      BqIU5QPoPfk18XuzQLScRZ9bSAEOEgYliLZ6WZa4zLyhncIwjImBCXRcsWaJElok/KQgoh1J
      OwvNiVr0t7/xgx8gjiI887HncP7CBQBAd3sP9799A3maQ6+Y2Lh6ZrULLAni6aQIkFyOI4Mx
      VkpxMguzjrmUCUTCPCskKmOZnUM8tpiDIMdWdHzkz4omESVNysoZykodijCO/X9/vPq/+uo4
      s+wH2PveHeRpDtXR4ayvwqEHBS1qIq+SbC0AmCC4Peh5xGMTNFmQi3hX6DPimBkZdAwyM+ax
      ycmrfdFxSeGIgU38EbIDTF1AZaFPAn1uUfieh163g4tXruDqU0+Pj8sYFEODkuY489nLcOqr
      0UcHBeVgsizjvdIkb6IjXK/XSwmGxVkOJDM0J4KavMjhlttR2a1bt3IyDYDpGb0iZr1HF0b1
      OyLI2aXPyTuI7/uFrYok2GKMvkiBKGJENr8Y9pIVzTAMnDlzZqnWz1s3b6BWq2NtfZ1fV+AH
      SKIYlXr1xEeE5MaQkwpi/Cha7eWcj9g3Tsmzos/m+bhvfGNjgysVkeg+KLUZU/yRDT3rJs3z
      BUj7ZCURhx2IgknCRISy8rGoSlBOvsl+BFUHkoDL5Rv0eVpJllmtFUXBlatPTr3+fnsP/8cP
      X8dffe4FfPrK1RO7AyRJgu7Xvgal3kDri1840UqgKONBImLgQgQtiPLg86LPiRCbvigYwpkQ
      gf1JinJTvOyYznvIi+YQ5LBmkdlFQktdYOIPEB1r2t6A/WxzUbslff4oSGmzLMMfvPs2vnvn
      Nn7vrTdO7PijNE3R+/ofwP/tf45comk8qfB9n7N+UC0ZEWR1Oh10u90JZvFFI4bi38XvT9Cj
      l9n/QLnwy6aJ6CjPu0hRwcRtWhRuigBRVIe+Q11jpM2U3CKFolZI+gwAnmk8rAIwxrBmj8O4
      pjq7hOJRIcsy9L/z5/B+659Ce/551H/2iyd69Qf2y2OAcRKTokKu6060sQLlfeNy/ZccWVIU
      ZXJAhvhlModkE2ZWfF4ObYoXRjsCsXfROej9Wc321BFGD01mehbrRABMlFeLNOYUPaJE3FEI
      K2MMmw8K4QytnHPoUSHLMgzeeBOjf/y/guk6ar/+FegnPE9BGd0iWZKtkLKEGDC9w/d6vYma
      NJHmHpAUQG5SkQWTBFq+CPGCZQUA9vtygf3WRPHfct0HnUfMAsurl5jYAiaVV7yGarXKPf+j
      ElTGGLZIAU5YT3Ce5xjduIHh//wPAN+H/ZV/D5UnnjhxSioiTVOMRiPepCJGECmSQzJUtFiK
      slG0I4gCT6FyknOt6Esi5Eyd6FDKkHeKIk1mbL9qlF6jHYJWbzEPIN4M+YeJO8hPtoe4tFkF
      E8oqqE/gOLb+rdq4E8w4QSZQnucY3ryJ/n//PyLv96F97GOo/8LPn5jrk5Hn464u4v0sWunp
      Pwp00LOdJfQidF3HaDTiPQMUcSRuVs3zPL6qU81OUahTvqB5P0w2jcqSZ/SaruvIVRXfvncb
      QZLA1DSYigpDU7HlVNHQTRiqikwYeibuALd3h/jf/uUb+OWffhovf/QMahWHj8Q8DlRNC46u
      n5gdIMsyDN95B4P/6e8j73QAy0LtN74C/Qh3vkWwaIIUGEcHXdct9BflY1QqFfT7faytrS0k
      g4RqtYpOpzNh2vu+z7lGtUajwfkzm80mPM/jFZsi5414caPRiF9AUVKpbCegvxfadoqCP7pz
      Azf63cIfwgBsVqr42UtPoqKoU8f8mRfP4V+9cRP/5Pffws2dIf7OX3/5WJ0+U9dRNy0YJ4AR
      Issy9L/7Fxj9o3+M3POgPvUU7L/2V+FcuvTQV/9Fz5fn08OyReGnZ0eU+IqilI6imodWq8Vn
      R3uehyRJODWOJtJKNxoNrgSj0Yizp4kCGwQBVFWFZVk8Jku9lgeFqqr4QXuHC/9TrXWoTEGY
      JhhFIbqBjyzPseOO8NV33sTPXLyKK9X9eH6Q5/j6rXdx5RkL3e9E+PZbd/GVX/Cw3jzcdc2C
      rqpo2TZMdV8B8jxH9MCONR4iS1yapvC//gdQL1+C/aUvofLC8w995V8WFNos8x8VRUG73Z5g
      eD4oxGig7/tYX18HwCuWNd4lT0mparUK3/fn9lpSRSWFqA5ywxljuO0O8b17dwAAz22cwctn
      zk+YUExVcWc0wJ/cuQEvjvGHN97D5y5cwqbt4H5vgO/fv4soTfDLH/8Y0L6O19/bwTe+fwN/
      /YsvHJsQKIqCjUoFhjbeIUPfx+jbfwb/d38PzDKx8V/+XZgzatSPEpqmYeO/+M/5gz7Jgk8Q
      o4AEsW5fDF0fBSqVClzXnbIKNMYYJxKl8fFkk8szroBpE4YGSIxGI9Rqi1GEiMfwshTfvHUN
      OYCzlRpeOX+R2/nA+KbUqlU8V63iYmsNX3v7Tdx3R/j29q2JYz7VWseWZeM3fv6juHF/gG98
      /zb+jc89A8cerx5itOmoQqHrTgU6gO4f/zG83/sastu3AcZgvPoqlIfoG8iBhbveJHkAACAA
      SURBVA8DiqI1FOWhZFir1TrSyN1gMMC5c+cmXtcA8MENQRDwMfW2bZcqgPwDxAmKjLGJri9y
      Wop+OGMMncBHlKbI8gQ6uwnLfAmM7RczUSODooxH3Hz5hU/id3/8Q9wZ9MEAVAwD52sNfPbs
      BSDP4RgK/qO/8gL+h//rNdy638Mzl7YwGg7x7W/9Mdq7u/ilX/nVI2lmZ4zhlc0t5P/gH2K0
      swsAUDbW4fw7v4baZz8LbTX8ohR5PubpEYMqRGVDZRDNkpbTPM/5HDkafEe5pjAMC9kDgfHz
      KqoC5tSIjUYDruui1+uhXq/zRvEy4iIZ9Xqdc3ZWq1VomoY0TeF5Hqc+KbqwM9UaVMaQZTmu
      dX4Mx/m3Ob11UZa5Xqngl5//BG6099CwbWxUa9AfUJ8TPeKLVzfw3/zHX8SFjSr+5JvfxJ/+
      0TfQ7/XgVCoIowjOEuUds/CEH2K4szte9b/wKuq/+iuwHxTMnTYsE/0h/lYiLYuiaOFS5yAI
      cO/ePZw7d46PQvV9ny/aFC49e/bsxPfIr5CvUxM/UKlUeP3F2toams0mer3elBIU7QKMsSkT
      SNf1CRpyEbVajU9ibFg29rwEpubwY5VVazLGUHUcvOBcKv2BURTh2ctn8P577+L/+d2v8s+c
      u3AB3/32n0J/MCPqyaeexhOHiJRUnvsY0n//byL64Y/Q/I1fh7Wa+sgrc+meys8+DEMeRaRV
      u9VqLXWOF198EYPBgLOA08ha6vab1R8sYyoTTBcdRREcx8Ha2hr6/T53kpdBnueo1+vo9XoT
      TrJpmhNlCU/UGmh7I2jK4RwesSo0SRJsbGzi0tWruH3jBvI8x/vvvIP333kHwFg547/0c7hw
      8eKBnXfdMLD+l/91xH/pXzv1877k3ZoEnzHGo4VU5Fb0+UVBwt1oNAore+c5zaU7AL1JYc/R
      aMRHEVGJKjUrLAo6meM4fFgxgAnzRlEUXGy28IP7d/HpJz5/4Ng9EVtR9CAIAjSaTfwHf+tv
      4/4HH+CHr7+OOzdv4tyFC7j6YOWvLVkaLYO+K2e2xfeOGuRrndRoTxGbQxRF3J+Ud3ay/Q9C
      M7/s7y8y06YmxBDF4HA4RK/Xw/r6OgzDQKvVQq/X46Wki5ZJU0kzJTTkzzPGcKHRhKVpuNx6
      8sAPlbExOwApKf1Y07Rw8dJlPHHx0kSt0HEIT+gH6Hz3x1BtE8ZmE3qzCs00oGjqRD3UQZHn
      OW63R3hjJ8RnztvYap78TjRaOMsE3LIsDIdDbsMf1++RS+oJU2lMGkupaRo6nQ5n1aXkFzUv
      00HLIjxyhs9xHAwGA17YtLGxwd9vVqr4m596GQ3ncA+UmH/Fem+6rocRKhzduIf2//3t/RdU
      BWrdgdasoPnqi2g9/+ShZwm4UYo9P8PbewE26vaJHtCRpikGgwGXBfHvBJrHEAQBN5WPI4Mv
      1peJUH/zN3/zvyp6KIqiIAgCxHHMTRa62WRnA9ORnSIBpgSNZVlwHIdHmcRzOaZ16B9O+QuR
      ZexhQqtXoKxVwSwdeZIic0PkfoS058L90XVEfgDz0hZUfdp8EYv+yhYBxhgqOsOtXoS2n+Fy
      XYFlHL6/YRGIVbyLnk9sWwTGNTiNRgOmaU78J8oHcbse9bNjjPGSH5EjtlQBAHCyUl3X+QQO
      KlEW09h0gpkXkOfYfus11Nc2UGs0j+2hMcYm6BgB8OaY4xYUVVNRubCJ+vNX0fipZ1H71Eeg
      n20h7gyRjXyEt3YxevcO9AvrMGr7u12apti7+R4Gd2/CG/YRuGNSYb1gUVBVBWkS4+4oBcsz
      nG+WzzM4Sgx32tj52p+h9tFLCyf5giCYyPYGQcDNHPE/fo4H+SNKhB310EFVVTEcDidYAksV
      YGw/j/lziLaasqikBNTrS54+jSSSa/sZYxjt3cN3fuefoH3nBi4+96lD16qUrZZFN1ZszDlu
      UHhP0zSYVQeVi1uovHQVsR8gutdB2vcw+sE1ZLYO82yLl4Lv/Og7CNofIGjfh7ezDff+bVQv
      PMlXQrE+vqIDN7sh2kGGq00N5kPY6ZIkwe7v/Ans5y7BrM02VUk2ZFM0CIKZdT1UjUwTN/v9
      Pt8djgJkfpOCGYYxewcgYVcUhRPdivZ0kiQ8rNXtdhFFEXeUaeI7tbYpuoXe9jV0796C2+/h
      wrMvHviHZVmG7U4bfc9FTXCcypIxtG0/CoeRMQbdNFD96CWw9RqC6x8g80N4P74Ff7cH6/IW
      TMeG0dyAs3kBtSeeQv3ik6hffAp2pcq37ht7I2RpCtvUoWsqoijGvVEGg2XYqh1/4V0OoPvH
      P0KeZag9e3HmYkINLiKSJOE7QBlEan0KaoRhyKn1j+I30pSY4XA4Lo2ZpQDilwBMhN5ohyAl
      oAflOA6/YPH7nufh7MUruPf+T9DZvg6nuYHNC5cP9KPagwF+6wd/gTd27uGZtQ2Y2tjup+kw
      VGko1v086miJoihwzq3Deu4Swg86SLojxPe7cN/bhrLVQO3cFpx6E1alCtOpwLTGip3nOd69
      P8S3t0PsujGuNsez1ao6cK0bohfmuNrUoOvHW5adZRn6r7+L8NYuap/+CHSrPN7ued5Ef7nn
      eQjDsLS8QYQ4HBHYH77e7/cL2UMO9Dv6fTiOA9u2F1MAci6LzA3TNOF5HjRNQ6VSgWmaaDQa
      sCwLpmlye9xxHARhhMysQa/UkQYennjmhQOxNAx9H6/fu4McwPPrZ5A+MLt0XUcQBDzuTEPz
      qIH+USsBYwxGxUb1patI8wzRdhtp38Xw9fcQjjwY59egmZOmYZZl+MmOh16Yo6IzPL057tHQ
      NRVBGOHuKENVBzaqx7sL5HmOwRvXEd/vAo6B6tVzheejpJcIz/MWoqMhR1uO1lFNmOu6Uwqy
      zPUTnUqj0eBm/KGNYrHnUhywDUy3Qm4GGiqqCWf9HGKjhp/88Pvo93oTUaWyi6dqzizLoGsq
      FMagKypa1Sparda43jtNYe4MUbvZhZ2Oldb3fYxGI/R6vaVp348DjDGYloXzv/g5XPjbX4Jx
      YR1IMwz/9C3c+vtfxe5f/BixkHBM0xSdYHzda7YCTRjK/cymDV0B3u1EiKK49JxHBbU2Nl9G
      r783Ed0RQU0u4vMsYxyRMWscF2P77HDdbnepZ5kkCbrdbmGL7EI7wDwQual4saLNTT+qmms4
      F5uIswSjLMRo0Mf9O7cwHAzAFAWabkxNhaTGHNd1MRwOx437mo7v3b2NqmHg009c5hGqqDuE
      dn0XSpiCMcC+sAlq+KGIlpiiJxPjUewMiqLAbNRQeeEK0jRFuL2HzAvhvnkD3vYutHMt6BUb
      oyDCGzshcgAf3TCxXhX8ME2FG0TYHmZoWUDTOb5dgDGGVAVG338fmRfCevocrLXJHpDRaIR2
      u83vdRiGPBI0a/qmeA4qyS8DVSd0u925x6SusziOC1t954ZBF4XrutwPKGJvoIuMHR2sWcGZ
      1EI1VdFJPKR5Bm80xM7dOxj2e9g6d4HbecPhEKPRiM8ey/PxFEHHtmEwho+sb2LrQUg1yzJk
      N3ag+hHAgHSrDr1Z46Fb2TyiqNWj5MrhDvIzT8D8yHlEO12kPRfJ3gCD772LJEsxqNdxczhe
      7T51zoZtGhPfr2g5rnUj+FGGKy3j2BJjjDGoNRuDH15D5oXIGUP9uSsT94+Y3Yh7h0zgRYSf
      zuH7/twOMArCdLtdbp7LyPMc3W4XlUplovRG/syRP30x5SzSldNq66s5RlfXUH/mCl7JNHwm
      Aj4ZJXgBDBcuXZkIocrbpmEYnB77s1eewsfOP8EfQOz5UHtj2zMzNajn1iY6jMShaqZpTkyG
      pEKt0WjEI1jLFv4dBqqqonn1Ai79J/8m1v/aK1AqFvIwRvdfvoZrf/gWAKCqM9jGtHA3HAtX
      Gip2vAw7g2Dq/aOEbpqovDSmifTevIHI8yfe1zTt0PQzi35X0zTe2ri7uzthkmVZhm63i0aj
      MTehdmgFYIxx0ilgUgFIwOSEWZwkCBwN7Ow6mm4PG8MBzna7aFVrXGiL4shis4NsYmU7fbA0
      Qw4gPd+CIW2jhmGgXq/z/yqVCneMabXY3t5Gt9tFu93mRVoPSxHINzjz6sdx8e/8EpyXngQY
      w2B9DQBg3bqL3T98HW570mdSFAXPbthQGfD2Xlg6H+0ooCgKGp94GtBUZH6E/hvXH+pCIYNC
      pZZlIQxDdDod9Pt9DIdDNJvNhXbDI4mdaZqGVquFIAjQ7XanbopIpsXt+yzD6CPPIN7agv3W
      m0hba4Bt8wiC53kT/Qdls3sBII4iqHvjLGJu6VDPTGaaZaIlek9kFaZkH71Hfsfa2lgAqdtN
      rnY8aiiKgurmGqx/9+dw/71t+MOxIjeu30Lv5h0M/uRNVD/5NJqvPIfa2THjcbNi4om6j1uD
      FH03xFr9+Njq7K0WrCtnELx3F6PX38P6Zz46RaamquqBFfEgClWtVnnou9FoLPXdIwseUwnC
      5uYm7/gpIzGl3SFJEqTVGsJXfhoAkAnFUsTdAoxrSs6ePVtq68XdIXQ/frD6N2FLqz+xAdCK
      IY5uBcYmyLlz5ziNtjxVBgD/LeLMWnEa/VFDVVX0aw1kbgSNAc9++XNIbtyD9/YdDF97F+Gd
      Xdj/6S9xisiPbVq4NXDx9l6Al6vWsfkCmqah9smnEbx3F8H1+/B3utAvbE18Rtf1AyvAQXwy
      8gnk8OsiONLsCTkk4nA8sq+L5oBR95Ac0qKYbaPRgJYFUO7/fzAGQKSqCPMM2pnnoFz4DDRz
      3OOp6BqgMGSOCe3MdCO1qqoTE0j4j5d2FGqjk5NneZ5PTLSn149DyLIsw/atm+h3O7iungOg
      YquioHWmBfX8JtKXn0cSRcjj/R2RMYb1mo2rjRA3+gk+MgqwUS92/JZBUTg7yzLUX7iKztdf
      Q9pz0f3Wj+B8+YsTfKy0GtP3xOKzIoj3+zAm1UHC3MeSPqQfRPZZmqY8JCYqg/h5UTHyfDzN
      0XVdnLn/dSiv/8Pxew8+HwOAs4nwys9CfenXYG09jfDJTTDHgl6QJFlUEMoiBVEUQlHUmQ7V
      UYVT0zTFvds30e+00Tu7BagqFLZ/fE3TCk1BRVHwwlkbNwdD/HjHx08fwS4g/540TRFf/yPk
      ZgO1T1xG7xtvYfT6exi98hwaF8+CsXFz+/3793nykWh25JB40fWTiRkEwdS9pvfkPJN4jRQN
      LHqvDEcSBp0FunBd1ydCYmSONBoNHtkhhmfyI3Rdh1ldgzK4BVTOAI1LQO0JoLIJMBXovIfc
      bMJ84hPQ61Vo9tHHwUeDHXz3a/8hhr2baJ39DNQZXKCiIh/0OhRFge1U0d3bRZwkiMwGhhFQ
      UTOsVcojLIwx6KoCNwhxc5DiYk2ZCJnOAwlWFASIhgNkOeAOXIw6A5gVa1/47r8B+84fwmqk
      6N4ykAcR0iBC7YWrXHgZY3wMbZ7nvI5MZA4BMDHYkIa0kBJRplYUeDnBRvX9eZ5jMBhw2SoK
      vJT95ofG68eTNw9i8vLFOY4DXdexvb09MQk8YBcQvPxfc9u7aKUN223UarVDM4gVX7cKBoa7
      P/lniIMunv+ZvwvLnq6GpBt//9pdRF4Is2rBrFgwHBOqpsJ8cG2LJIPWNjbw0k+9gjdffw1h
      NEBkNvD6/RBbNR/NarlpoygKnt20ca03wrvtAJ+t2nNt6jzPEfo+8p0dKHduQbt7F8ZoiNyy
      4YfA0M1gf+ETULY2oW9sImtcQb7zGrS0h/rPvIre//sa3DduYHT7PuqXzyGKoonrowEng8Fg
      YpYDhaaLzCPHcaZ2CjKtyM4neaI+cCqFEU1tMXBR9LwAgAVBkJ+kGbf9fp9HgGg18DxvopBK
      DF1mrQhW7uDy1lUY+tHTAeb5mO5w59a3cPvH/xSqXsEnf+6/mwqz0up084fv49o338JoZ78F
      1Fmr4tLLH8GFl65CN/WJ7b5sq87zHK47wrtvfQtvseeQMAtnKwq+eLUO0yz/nWma4k+vdbE9
      SvGlZ+qoVWYzJERhCHzjX0Hb3QGLY7ASEyVXFIT/1pehODbYm/8cWv8a+i/8Z7j3v/wLpL0R
      7Ocu4Ymv/AJ6vV7h94MgwGg0mugEXBRxHMN1XW5O9Xo9NJvNwntX5gfIn+OL6UlTANLcIAgQ
      hiHa7TY0TeOtmVR8xxhDvVHDNwb/Ah+E29gyz+Ej1efw4san4ZjO/BMd4LriOII32kWtca7U
      viaF+eCdbdz8zjvo3tzlzotm6mhtraF1fgNG1YJm69AcA7pjjP+0dKimDlV/MADc3UZy47/F
      zeyTeD3/ZQAMaybwdN3FxfUNOM70gL48z7Hbd/H777t4YVPHxy/OZlej60WWIc8y5FEEuCNA
      19H/oIc3vvrnMCoWPvnrX4SzuTk2czp3oF3/faTP/Rq6330b7d/9M4AxnP9bXwLbqHEWESJZ
      o2scDAao1+sAFjcRqY1W7PCjHmJZbinLT+bzrNJrXgZz0hSAQFsgTQSkP+/duzfBNsdUhl7W
      xjX/J7jtXccvnv8yLrWuPspLB/BAYaIYO9fv4YM3b2H37buI3DEzgqIoqLUaaKw1oYstjYyB
      qQyKpkC1NJjrFkz1NehOiO+lr2I7IN6lHFUdeKpl4Ml1GxXLmNjmkyTBt671sOdn+NKzddgH
      NA29kYtv/r2vIRoF+Pjf+Dwuv/QUFxwiGAhcDzf/3u8g2Rtg8298EdmlNezt7fHmKEVReMZ2
      OBzyCCGhbAekMLiqqlOx/TzPsbu7i/X19YmFqNvtckuBgi507Gq1yntUaLfWdf3kKkAR0jRF
      u92e2uZs2x4nQ5IIunawehjZ5jwqU4pCh4Hr4/4727j7o5voXt9Blo6Tg09+9qPjvgo3Qhan
      +6Eu8VpUBrVioG9a2NEMdCsOsgfXZ6rA5YaGp9dN1G0D+oNk3v3eCF+/5uGz50w8e+5gxMVp
      muK7v/1HuP/mbdTPt/CJX/k86hvNCWXL8xzDe7vwt/fQeukp9AcDXq3JGOPRIDI5iC6TCtWo
      TFq+vl6vN3MqfJIkvKnFcRwkScJL78V7Tz4HkWiJyneid4AypGmKXq/Ho0ZpmqJWq03E6ZdF
      lmWcaez8+fPjftwjGKYng8y7UWeAOz+8gf52G8//4qdRadWQpRkiP0Q0DBAOfKSBREmZ8/8h
      O7+Ga26G7VGG7MHbDEDdYFizFWw4KtZsFW/shPCSHH/5mSbMA9bQX3/tHfzod74DAFBNDRc/
      8zSe/dkXYTnF5kUYhpyyMEkS7O7uYnNzkws50VeS00o5FnqfHGbqL5mHe/fuodFooNfr4fz5
      8xPvFQUA5KjSh04BgAdN5Ht7AMY3fH19fSkFoJtAXWSe56HX6+Hq1as8a0wkrWVTZg4T9xfr
      pGS26nmJIDpvmo7LHt7eC3CznyAq8P1UBqQ58IVLFq5sHowELAxCXP/zt/HBW7cx2O4gz3J8
      /Fc/jyufeLr0O2maYjgc4s6dO5wBRI7X02/Z2dnB1tbWxPvD4ZCbPfQ86HuUYaaQqmmanHJH
      pugXlUrEh14BgLFz1O/3OYXj2bNnF37ARKRLN7Pf76Ner8NxnIkBzMCYw1QcwEf3SmQ0MwwD
      YRhyFuuHBVKikR+i6ydI0hxhmiFMckTp/n8f3bRwYW06E77oOYDxPRvs9tDf7uD885dhz4ku
      ZVnG+8OLlJqEczAY8Pohz/P4zksjUSn6I5pCNFZJjAzSjIqicnw5J/BYKIDv+7wPIc/HHKRi
      nc4sm340GnEKDkrUbGxs8JVkVkqdtm1SHmKyJvr24ypCWxTiwwX2OTqPSjGX2fnI9h4Oh3w0
      UZZlU+2RnU6Ht9NSS6X4HGVzqN/vwzRNPuiOTFg5VD7vOh9qIuyoIZbBDodD3Lx5ExcvXkS1
      Wn1QvhDxVdowDG5nUlkGger/SZGKapNEUN25mM0cDoeccuMox7EeBHId01HvSMv8NmqQGQwG
      3FejLj+RSTzLMs76YBgGDMPgfhgxi4iI4xj1ep3TbYrRH8IimWDgmGqBHhYYGzfl03ZLs2Yp
      O9hoNMbTE4dDdLtdbGxs8BkGBNu2+YRykb+Ujg8U2+XyVkqzEIIgQK1We6im0EkGY4z34ZLz
      S6wRNKhOZB6ne07RHDIv6bUkSeA4DuI45ouVYRRH/sp2KzqX53kfbgUA9psizp49ywvoyC+g
      m0jNEu12e+pG0fdp2J8IImaiIjSy+SlDXa/XEUURHzJI9iyN9znOGqsPE4jRgcxGyuiSzV82
      1QUAF3T6O3X07e7u7iezFjB16LNiACJJkqNviXwUYIzxmHG1WkW9Xp9obqGiLLGaUK4qpGiQ
      53nczKGVvdfrYW9vj7fa0dCPfr+PDz74gK9o5FdEUcQ5LlcYm0LNZhOWZfFoDTXN0PhScUaY
      CBrWSK9TUlQemF1W6yMX0vm+jyRJ0O/3xyTQx/rLHzIomiCu8mRXXrx4kdepFNnJrVaLtxrS
      lkwmFIVCGWNcmSjRU6vVeD5C0zQ+A4EYzejfj9o5fpSgZ9BsNvnk9izL0Gw20e12p4R41sJB
      OzAtUqQ4tEOL5dDisbIsQ6fTgWVZGI1GnBDhQxsFWhZhGPLcwTz7nDHGoxbEJTlvjA+F4WRQ
      Cbh8/IcdMj1JoJWfWlJHoxEcx+GLiwiaWScqCfkC1Wp1gmyX/D2qFSMlIOEXj0N4rHaAeSBC
      VKoXF3cKokkhe5HCbouOhqrVatjb24NlWXy+cpqmuHfv3oTy0BZer9d5Cfdp2x00TeOjt3zf
      R6VS4WzQlCEmczWOY4RhyKN+4jC9ogpP2pGptwTARPm1jFOzA9y9e5dzh5Kpoz2YLgmMhdW2
      bc4mR5Mufd+f6sKSmaaJWkVRFHieh/UHkyIHgwEqlcqEog2HQ+5skwlV1K55GpBlGYIgQLvd
      5pQ3NHwd2I+0iQvWIvcpCAJeeEefp+cu49TsALquo9/v82QMbZmUZRwOh7xdkzjkaTVyXZeX
      8QLgNIvUgEHON0U0iAWZHG/5OogmPM/HM2+pbPi0QVEUbvqURYHIr1sGRMolgmx/OadwKhQg
      z3OehCkCpd7JgaI0PJlDcmJsbW0Ng8EAtVqNC7kYpSDzyXEc9Hq9CRPIMAyMRiM+bop6H06j
      AhCOO1lHi1WtVjt9CkDpeN/3OQuF3FtaVDBFIHNJjjdTtIgcXPoMteFRvbllWZyyHdj3Q6Io
      4swXlDw7jWbQwwApGFHbkOml6/rjrQBUszMcDqdqZMQwmSz8FJmg6S3kiMnRHHlHIZMqDEPe
      EEI8pKqqotls8pBplmVc6OkaiVdzheMB5WqIgp0x9vgqAK3Gu7u7cF2XE6SKK3nZqk+ZXSra
      oupRcprJxi9qwnccB67rwvM8WJY1VaJbZuq4rnuonoYVZiPPc77q0+6sadrjqwBiz4Bpmuj1
      epyhYJ6gyYqh6zrW1tZ4nwA1ZJfhIIJMCbMVjhfkeFNU70QqAK3eh6mlEas2dV1Hq9XiK/sH
      H3wA27ZLp5ZQtaH4HkV46PqAgzGRFcGyLJ5w0zSNR6BWODpQ6FregU+kAgCHE640TSe6iEhg
      KYFSqVRg2zY6nc5Egz2hVhszG4gltnQ9FPGhwji5rmhZqKoKTdN4fyv1FVAMm2ZkrRzkw4FY
      RmScSAWgB39QJElSOsKHEiuapqFer09wzIjnL3NGRcWkiI9ch1KEomItOgeZVgSxK412MDFe
      vsLyKHueJ1IBjhpiBGgwGHB7m8KU3W4Xuq7zMOkyIUlK15eZLJTgMQxjgqmMCGTlz4o7De0s
      NHJobW2NLwwrRVgONLSRdgFqmHosSyGIcoN6R5Mk4X8XHSACrd6qqvKSZ8dxlnZmTdNEJAy4
      I2FXVZVTBlITxzyTSYxU0eolUv/R+CH6zMpvmI8kSbC3t4c0TdHtdsf93o/6oo4Lvu/zFZTs
      +bJVUyyhDoKAF2UtCyKCEv2CNE15voD+vQjkfAWACbOOehcIlM1emUnl0DQNm5ubuHfvHjzP
      Q6vVejwaYkRQk/uNGze46bBIs3qWZXxb7Ha7B55FS7vJQZxisR5mkaZu+dz9fp+PKV2hGKqq
      Ym1tDZcvXwbwGFaD5nmOTqcDz/P4hMlWazY/ZhiGfDqhyGX5sCE74gcFlWSLJLwrTCIIAly7
      du3xM4HI4YzjGM1mc6EQZRiGU6wCjwpHYb4EQcDrXgzDKAz1nnaYpjnu9HvUF3IcEDki55kS
      URTNHaX5YQZRvqwwjWaz+XgqgK7rvP8UmJwMKYKYx05CKfJxrtBFCaDTDqLUeSwVANhnbJMb
      4EVQHf5JCB8u6/Qug5VTXAzG2OOrAAD4ZPgy4bJteyJu/2HAQa71JCj4ScVjrQBEzUcKUBQN
      KSLEfdhYNty5qBLQ7z0JJt5JxWOtAMBYCChjWrQTaJqGIAjgui4AlJLjUhcRfe4osUzZxbLH
      lJvyV5jEY68ARH1If5d3AUqMEIuDOOCZ4Ps+J8CNomji2IvE2OlzZU3f1HYpo0gRF/UVyMkj
      UuAVivHY5QGKoGka78MlAZIFjgrkhsMhhsMh0jTlbY2O43DSK4qvA5PlCrNW57L+Y7qWO3fu
      wLIsPh6UmCPSNOW0gcuAMQbHcU4t3coyeOx3AGAsEERWBYzNIt/3ORu0KCS1Wo1zixqGgVar
      NdX6KK7M1GI5T9CK2jDp74qicGKuTqeDTqczdR46xiICbRjGSvgXxGNXCjELvV6Px8Tb7Tav
      n6F6eyKqEqePy3SHxBtEyTaZxKkIZAJRL4II4rYs47NftjGIMTZRNr1COcIwPB0mEKFarfKw
      Z7Va5bNnqU+03W6XFqOJkaRms8kn1FCPMXVtFZk7ZbkI+rcs5AcNy1J/w+Oc2T5qnKodIM9z
      XiRH/5ZBlZzUU0A0hkUDqWlFH41GnMGMdhLR5BH9jrKV/ihQrVanZhysUI4gCE7XDkBCSk0p
      RQJIgj6rxVEUZEVROG0iKVZRVWdRff9RY2XzL4fHZkDGMhDNniLQal00FwCd7wAABptJREFU
      x2penb9pmo88qbbCYqBW01OnAOTo0lC2IqiqOvP9MpTtKiucPFCr7KkygQiqqnJuft/3OV+Q
      2DyvaVrhyFWZI1SEYRjodru8j1ek+j5KlJlTH6aapkcNPq/sEV/HIwM1zui6zueDkSKkacpv
      kGVZ3BeQ+UVlol3GGG/CoQFwD7MbaxX6XB6nzgSSQYrQbDZRrVZ53QwNYxajOEXlDHK4lFgg
      aGLlIucvGxBXhDIiLnLwV1gMnufBdd2VAoigcoQwDKGqaiG5lhziLKvOpEzyIs0ocmnEPBTV
      IIkm2wrzUalUxn3Tj/pCThKocK5Wq2Fzc7NUeGUFmHfMWUJdtpovezzHcVYKsARogTq1PkAZ
      RBY34vBZpNiNZgiQQNMkQ5o2s8z5xeMuipXwLweqll0pQAFoGFuZAMqvu67L54SRANOw7EXY
      Jg4bOqXVbIXl8Ni3RB4U5JCSUzlPQJMkmSLfMgwDpmkuRYN4UBTNv11hMazuWgFIIGu1Gp9q
      XoZZcwyWKZM+KBzHWa3+h8DKBCoAhT5pjhR1bdHcX6rfD8MQURSVmjlEtgvs7yrLmFaL4CAZ
      6xX2sVKAApDQkhmUZRn6/T5qtRqSJOG7QrPZ5Jyi1DQjJsco05xlGadolE0V2emVC+lmKUW9
      Xp+ah7vCclgpgASK6BBo1m+lUtkfrPZgIAZjjA/ZoNfFsCb5AYwxvlvMIuqV2yVlVCoVbu4o
      igJd11er/yGxUgAJMoW5ruuwbZubQ1TnI67kjUaD9wTI8XgSUF3XOeOEPHegqIlGLLegCNPK
      3Dl6rBRAgih8eZ5PrO6zJs2TeeS6LhhjU2wMiqKgUqnwyfCWZU3VFslJMRrkt2g0aoXlsVKA
      GfB9n88DFifGA8X2uaZpqNVqiOOY06iI45aIZYKEf1YPca1WWzW2PwSswqAzQBPFCYvSoOi6
      jkajAV3XJ8opGGOcXKto1Sdht217JfwPCSsFmAES4CIhnVevA+yPWxKhqiqSJJlSAPEcKzKr
      h4eVCSShiKFhkWZ2eVcIw3BqXpfruqW+xLIVoSscDVYKIIGoD2nWWKvVKm2Ql3cDUQniOAZj
      Y7pFxhjiOOZFdjQQm+L+csfZUU2gX2E+VgoggBqlaXAGmSIU8y+jOCz6Nzm/jDHeUN/r9Xgr
      JkGcICkea4WHg5UCCKCpknmeIwgCNJvNmWNNy3aAol7dbreLtbU1XmlKr4vfB8Z+x4rY6uFh
      pQACqA84CAJOVEsoivqU+QLye8PhkAs/sO9niKYO1R7Nm2i5wtFiFQUSoKoqL4UwDONAxWmy
      E+u6buHg7aJj02jTFR4eVndbQBzHnC+mqB+YIDbJ27ZdWg4dBAH6/T7CMJwwpWThNwyDzyhe
      4eFiZQIJICHVNI3vBkUgBSCzhYZqyJ8PwxDnz58HAHQ6Hd50D+wrAXEU0XFXeLhY7QACVFWd
      KG2eBwqVUpRoFlFVq9XitUUiHMeBqqqr1f8RYaUAAhhj0DRtonwhCIKJFV90covqg2ZxjlYq
      FdRqNXS7XQDg7HErPp9Hh5UJJIAaYESB3t3d5YPmqLSBTCXf93molOqGFEXhTBBFyqCqKur1
      OobDIdbX10v9hxUeDlY7gAAKS1K2No5jNBoNJEmCSqXCs8RU9Vmv1/muUalUuC9AXWJlwk3D
      NGY1x6zwcHCqBmTMQp7nPGITBAEURZkQYOL7JKGfdRwariHOJZORJAnOnz+/UoBHiDAMVzsA
      IU1TvsInSVLYu1upVObW6ZCf0Gg0YNt2oX1vGMZK+E8IVgYowEsfyPanYrWyz86iSAf2w5mm
      aaJWq/E8ACkPjVFa4dFjpQAPQHX/NK50FuYpAH1mMBhMFb+tcLKwMoEwNnmoDogoTI4Kq6EV
      JxunXgFE84cmPsqsDUXfWVSwfd/nvsUKJw+nXgHSNIXv+8jzHGEY8lKFWVhGAShZtsLJxKlX
      ANd1uZCmabpwVpZ2jDJKE4Ku66syhxOMU68AosAbhoEgCBb63jzBB/bpTVYRn5OLUx8FEpNd
      jLGlHGCxp1cskdZ1fe484hVOBk69Aoisa67r8qnvi4AEv9Fo8OOQQq1W/Q8HTr0CiLQnsxJg
      s74PYNXH+yHFqd6fqWaHhP8gZcl5nq8qOj/EONUKAOzX/VAj/CIQFWXR+b4rnEyc+qVLnAK/
      iPmjKAony6LxSCtH98OLU60AeZ5z9gfDMBDH8dyJK+QnrGz+xwPaLPaDxx1xHCPLMui6vlQS
      jNokV+bPhxtxHOP/B7+z9E6io3HdAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
